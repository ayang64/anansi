2006-10-06  Stephen Deasey  <sdeasey@users.sf.net>

	* m4/tcl.m4: Update to latest from Tcl CVS. No more annoying
	messages about underquoted macros when generating the build
	scripts!

2006-10-05  Stephen Deasey  <sdeasey@users.sf.net>

	* doc/src/ns_memoize.man: Add description of the memoize
	commands. (All 3 commands described in a single man page.)

	* doc/src/version_include.in:
	* configure.in: Set a variable "version" and substitute the
	PACKAGE_VERSION into it.
	* doc/src/ns_memoize.man: Use the version variable.

2006-10-04  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/binder.c: Make UDP sockets support broadcast option by default

2006-10-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclthread.c: Fixed handling of mutex identifiers
	in [ns_cond wait] to allow string-based handles as the
	rest of the code.

2006-10-02  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/driver.c: Make driver to use Unix domain sockets of 
	type DGRAM and STREAM

2006-09-28  Vlad Seryakov  <seryakov@users.sf.net>

	* Makefile:
	* contrib/examples: Added examples dir with index page and
	upload script. Updated makefile to do exampels installation
	during make install

2006-09-27  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Fixed bug in ns_upload_stats

	* nsd/config.c: Changed log Debug level to Dev level
	to make logfile not filled with too many debug messages

2006-09-27  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Added "-maxruns" parameter for proxy queue
	to limit number of runs in the proxy. After reaching the limit 
	the proxy slave process is automatically restarted.

	* nsproxy/ns_proxy.man: Updated docs.
	* tests/ns_proxy.test: Added tests to check -maxruns option.

	* nsd/tclxkeylist.c: Fix to avoid setting object in interp result.

2006-09-26  Bernd Eidenschink  <eide@users.sf.net>

        * contrib/banners/ns_poweredby.gif:
        * contrib/banners/ns_poweredby.png:
	* contrib/banners/ns_logosmall.gif:
	* contrib/banners/ns_logosmall.png:
	* contrib/banners/ns_logobig.gif:
	* contrib/banners/ns_logobig.png:
	* contrib/banners/msie.html:
	* contrib/banners/README: Added two sets of banners (GIF/PNG)
	for NaviServer

2006-09-23  Vlad Seryakov  <seryakov@users.sf.net>

        * nsd/connio.c: Fixed bug in Ns_ConnWriteVChars which prevented to
        send correctly multiple small buffers.
        * tests/*: Updated test to mark encoding as knownBug until fixed and
        http chunked test according to updated ns_httptest

2006-09-22  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclinit.c:    Avoids setting objects obtained from
	* nsd/adpcmds.c:    the interpreter result, as this may
	* nsd/conn.c:       contain objects that are shared.
	* nsd/httptime.c:   So constructs like this:
	* nsd/mimetypes.c:
	* nsd/nsmain.c:     Tcl_SetIntObj(Tcl_GetObjResult(interp), n));
	* nsd/random.c:
	* nsd/tclcache.c:   are rewritten to read:
	* nsd/tclenv.c:
	* nsd/tclhttp.c:    Tcl_SetObjResult(interp, Tcl_NewIntObj(n));
	* nsd/tcljob.c:
	* nsd/tclthread.c:  This is done for all "known" Tcl object types
	* nsd/tcltime.c:    like: int, string, boolean, long, and our
	* nsd/tclvar.c:     custom object types like: time.
	* nsd/tclxkeylist.c:

	* include/ns.h:
	* nsd/tcltime.c: Added Ns_TclNewTimeObj() exported API.

2006-09-20  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver: Added debugging support for malformed requests, more
	detailed error loggging if enabled, introduced new parameter for nssock:
	badrequestlogging, if enabled all bad requests will be logged

2006-09-19  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Removed extra (unneeded) broadcasting the
	pool condition variable. Also, in PushProxy(), the pool
	condition variable is conditionally broadcasted.
	Renamed Proc to Slave to avoid name-clashes with the rest of the
	code where procPtr usually means something else.

	* insproxy/nsproxymod.c: Structure holding the server and module
	information is now allocated from the heap instead of being static.

2006-09-18  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/http.tcl: Updated and fixed minor bugs in http proxy script

2006-09-17  Vlad Seryakov  <seryakov@users.sf.net>

	* doc/src:
	* doc/html: Moved all .html under src and converted them into doctools format.
	Not all files are in valid doctools format yet but it is matter of editing.

2006-09-15  Vlad Seryakov  <seryakov@users.sf.net>

	* log.c:
	* nsd/server.c:
	* nsd/nsconf.c: Make all path related parameters work
	  the same way:
            - if not specified, use default
            - if absolute, use as given
            - if relative, construct under server home dir

          This affects the following parameters:
	    home, pagedir, library, tcllibrary, initfile, serverlog

2006-09-15  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxymod.c: Registers Ns_Shutdown instead of Ns_Exit
	callback to teardown the proxy.

	* nsproxy/nsproxy.h: Exports Ns_ProxyShutdown instead of
	Ns_ProxyExit

	* nsproxy/nsproxylib.c: Added new command [ns_proxy stop] which
	kills slaves of the running proxies. Changed format of the result
	of the [ns_proxy active] to be a list of lists. Each sublist is
	in key/value format containing information about the proxy handle,
	the pid of the slave, the start-time and the executing script.
	Also, the command now accepts one optional argument: the handle of
	the proxy for which to return the status report.
	Changed [ns_proxy clear] to require the pool argument.
	The [ns_proxy clear] and [ns_proxy stop] commands are now symetric
	where the former operates on the idle proxies and the latter on the
	running proxies.

	* nsproxy/ns_proxy.man: Updated documentation for new/changed
	commands.

	* tests/ns_proxy.test: Added more tests.

	* nsd/server.c: NsInitServer(): Fixed wrongly calculated path to
	the server-private Tcl library. According to the new simplified
	schema, the path to the private tcl lib is "$home/modules/tcl"
	but the code calculated "$home/modules/modules/tcl" instead.
        This has now been fixed.

2006-09-14  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>
	option, as it was both broken and meaníngless.
	Returning a non-idle proxy back to the pool forcefully closes
	the corresponding slave process.
	Added new command [ns_proxy pools] to dynamically obtain the
	list of available pools.
	Fixed broken [ns_proxy active] which failed to report all but
	the first active proxy.

	* nsproxy/ns_proxy.man: Added some flesh.

	* tests/ns_proxy.test: Adjusted to match new command line and
	sytax. Added couple of tests to check [ns_proxy active] command.

2006-09-11  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/init.tcl: Fixed a bug which prevented loadin .tcl files on startup

2006-09-13  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Ns_ProxyExit() avoids tearing down
	pools having slaves on the run list, as this may lead to
	memory violations. At the moment we just "leak" those pools.

2006-09-12  Bernd Eidenschink  <eide@users.sf.net>

	* doc/src/: Added missing documentation templates for commands.

2006-09-11  Vlad Seryakov  <seryakov@users.sf.net>

	* index.adp:
	* Makefile:
	* doc/: Removed obsolete man pages, make install-doc
	will copy new html files from doc/html under pages/doc

2006-09-10  Michael A. Cleverly <cleverly@users.sourceforge.net>

	* tcl/charsets.tcl:
	* tcl/compat.tcl:
	* tcl/file.tcl:
	* tcl/http.tcl:
	* tcl/limits.tcl:
	* tcl/nstrace.tcl:
	* tcl/util.tcl:
	* nsperm/init.tcl:
	* nsdb/util.tcl:
	* nsd/init.tcl: Minor pedantic updates consisting mainly of
	adding extra-paranoid [list] quoting when building up scripts
	that are to be [eval]'ed, and adding "--" (end of switches marker)
	to regexp, switch, glob, etc., where the next option was user
	supplied input that might conceivably someday/somewhere begin
	with a hyphen and be misinterpreted as an option switch.

2006-09-08  Bernd Eidenschink  <eide@users.sf.net>

	* doc/src/*.man: Rewrote Vlads auto-imported documentation so that
	it compiles with dtplite. Next step is to finetune the contents
	during the documentation process.
	doc/src/commandlist.man should finally become a TOC and reference the files.

2006-09-08  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/log.c: SeverityName() changed to accept one more argument
	as buffer where to return severity name, if it has to be
	calculated for the given level. Before we were just returning
	the pointer to a buffer allocated on the stack, which was a
	bad thing to do.

2006-09-07  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/server.c:
	* nsd/config.c:
	* nsd/nsmain.c: This is experimental but i think it can stay in the core
	because i ran all tests and i do not see any problems but only benefits:

        Any call to Ns_ConfigXXX family will try to locate config parameter but if it
	does not exists it will auto-create section and parameter key. If default was given,
	it will assign default value. this way we have the whole config tree in the memory
	which can be view now more effectivelly with nsconfig.tcl script which will be
	installed now by default with make install. Ns_ConfigCreateSection will auto-create
	section during startup only, it does call Ns_InfoStarted() which is very quick and
	after server started, config behaves as ussual.

	contrib/nsconfig.tcl:
	contrib/nsstats.tcl: those script now act as page not tcl library file which
	makes it easy to administer without server restart

	contrib/mimetypes.tcl: Removed as all mime types are embedded already

	contrib/nsd.tcl: nscp is disabled by default

	contrib/nsd-min.tcl: Deleted

	index.adp: Make it in the top level
	simple-config.tcl: smallest and simplest possible config file

	Makefile: reflect recent changes in contrib and config giles

2006-09-07  Bernd Eidenschink  <eide@users.sf.net>

	* doc/src/commandlist.man: First shot of a document listing all
	available server commands, to act as a TOC later. Alpha stage.

2006-09-06  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/nsconf.c:
	* nsd/server.c: Make tcllibray, library, serverdir to reflect
	defaults from the sample config according to simplified one-server
	configuration which is common and easy to understand for newcomers.

	This will also allow to run server with minimal nsd.tcl
	which could be good to have with required settings only for easy
	maintanence.

	ns/parameters/tcllibray points to [ns_info home]/tcl
	ns/server/${server}/tcl/library points to [ns_info home]/modules/tcl
	ns/server/${server}/fastpath/serverdir points to [ns_info home]
	ns/server/${server}/fastpath/directoryfile points to "index.adp index.tcl index.html index.htm"
	ns/server/${server}/adp/map points to "/*.adp"

	* nsd/pidfile.c: Make it thread safe and reflect default config value

	* nslog/nslog.c: Make it use default log file in logs/access.log if logs/ directory
	exists or create new directorty under servers/server/modules/nslog as fallback if
	no file config options is specified

	* tcl/fastpath.tcl:
	* nsd/server.c: Make default diirectorylisting type as simple

	* nscp/nscp.c: If module enabled without any config, by default
	listen on 127.0.0.1:2080 and add empty user so locally it is possible to
	telnet without password

        * include/ns.h:
        * nsd/config.c: Added new public function Ns_ConfigCreateSection which works
	like Ns_ConfigGetSection but creates new section if it does not exist

	* nsd/nsmain.c: If no servers defined in the config, server with name "default"
	will be auto-created and started with default config values.

	* nsd/nsmain.c: If home parameter is not specified, installation path
	will be taken from executable binary, Unix support for now only

	* contrib/nsd-min.tcl: Added example of smallest and minimum config file
	that can be loaded and have working functional server

2006-09-04  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Silence compiler warning and removed
	limitation in the DriverThread/SpoolerThread during queueing read sockets, if
	one failed to queue it will not skip queuing other read sock but will try
	to submit all

	* tests/testserver/modules/testhttp.tcl: Make nstest_http chunked-encoding aware
        i.e. it will concatenate all chunk sinto single body which will be returned.

2006-08-31  Stephen Deasey  <sd@groks.org>

	* NEWS: Update with some of the latest changes. Added a new
	section highlighting config changes.

	* nsd/nsd.h:
	* nsd/info.c:
	* nsd/init.c:
	* nsd/mimetypes.c:
	* nsd/nsconf.c:
	* tests/ns_info.test:
	* tests/ns_mime.test: Merge in the mime-types from contrib. Add
	new command ns_info mimetypes which returns the list of file
	extension to mime-type mappings at runtime.

	* nsd/tclresp.c: Don't update the interp result directly as under
	some circumstances it can be a shared object.

2006-08-26  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/http.tcl: Fixed http proxy bug, added simple ip access restrictions

2006-08-21  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/return.c: Use our own defined macros HTTP11_HDR_TE
	and HTTP11_HDR_TE_ENCODED insead of plain strings.

2006-08-14  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/ns.h: Added definitions for poll() emulation
	under Windows, as we do not include poll.h there.
	Also, defined ETIMEDOUT so we get the compilation done.
	The defined value for ETIMEDOUT has no other meaning
	then to be accepted by eventual strerror() so we had
	to "invent" something appropriate. Unfortunately the
	build-in set of errno values in Windows does not seem
	to have any "near" candidate to the Unix pendant so
	we just defined it to one (1). This way it will at least
	work, albeit not have too much sense in error messages.

2006-08-13  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tests/ns_proxy.test: Test for [ns_proxy handles ?pool?]
	* nsproxy/nsproxylib.c: Fixed PushProxy() to honour
	proxies without associated slave to be set for expiration.

	* nsd/log.c: Rewritten caching of log entries to use
	separate caches for entry structures and log texts.
	Attempt to stuff both in a dynamic string and cast
	when needed did not work on some architectures because
	of padding/alignment requirements.

2006-08-12  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Removed Ns_Log calls outside the
	global locks in ReaperThread as this may lead to deadlocks
	in Ns_ProxyInit() when somebody registered Tcl callbacks
	to the ns_log facility. If the current thread has never
	loaded an Tcl interpreter (and the reaper thread does not
	do that explicitly) one will be loaded at the latest at
	that point when first call to Ns_Log has been made and
	there is a Tcl callback registered. In this scenario, the
	Ns_ProxyInit will be called by the server Tcl tracing
	facility and this will lock the global proxy lock. If at
	that time somebody is already holding the global lock,
	we'll have a deadlock.

2006-08-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Improved teardown of nsproxy
	at process exit. Fixed teardown of idle proxies.
	Increased default max. count of proxies per pool to 8.
        Added ns_log's to monitor nsproxy teardown steps.

2006-08-03  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Define 30 seconds grace period
	to wait for proxies cleanup on application exit.
	Always use wrappers when operating on Tcl/Ns Dstrings.
	The Ns_ProxyMain explicitly calls Tcl_FindExectuable()
	so the default encoding is properly set. Otherwise troubles
	arise when sending scripts containing paths which in turn
	contain special multinational characters.
	Force-fill in the last argument of the proxy command line
	with some string after the evaluation, as otherwise the
	previously executed command is shown. This is observed
	only on Linux.

	* nsproxy/nsproxymod.c: Calls Ns_ProxyExit with 30 secs
	graceful timeout.

2006-08-02  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: Set pipes in the child proxy to
	close-on-exec otherwise we may block forever if we
	attempt to kill the proxy running "exec" Tcl command.

	Redesigned reaper thread not to block the caller by
	waiting on slave proxy processes to exit.

	The [ns_proxy handle] command accepts one optional argument
	which is interpreted as pool name and only those handles
	belonging to the given pool are reported.

	* nsd/exec.c: Ns_WaitForProcess() logs also the signal name
	in addition to signal number.

2006-07-30  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/nsthread.h: Removed declaration of things normally
	declared in poll.h. We assume that all platforms that we
	support have poll implementation in place, thus include the
	poll.h unconditionally.

	* include/ns.h:
	* nsd/nsd.h: config.h is now (again) only included in nsd.h
	as it otherwise causes trouble when linking another TEA compatible
	packages with the server as it re-declares PACKAGE_* stuff.

	* nsproxy/nsproxylib.c: Do not use u_int8/16/32_t typedefs as
	some platforms (Solaris) do not declare them; use uint8/16/32_t
	instead as they are defined everywhere in sys/types.h.

2006-07-29  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: List of free proxies could get
	corrupted under some circumstances. This has been fixed now.

	* tests/ns_proxy.test: Fixed enumeration of tests.

2006-07-25  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsproxy/nsproxylib.c: New ns_proxy commands: send,wait,recv
	* nsproxy/ns_prox.man:  Added [ns_proxy send,wait,recv]
	* tests/ns_proxy.test:  Adjusted tests

	* include/ns.h:         Added ns_poll() wrapper which defaults
	* include/nsthread.h:   to the platform implementation of
	* nsd/driver.c:         poll() except on Darwin where our own
	* nsd/nsd.h:            implmenentation is used. Replaced all
	* nsd/nswin32.c:        internal uses of poll() with ns_poll().
	* nsd/sock.c:
	* nsd/sockcallback.c:
	* nsd/unix.c:
	* configure.in:

2006-07-22  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsthread/pthread.c: Added definition of PTHREAD_STACK_MIN
	for Solaris.

2006-07-21  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/file.tcl: Use wrapped Tcl proc aroun d.tcl file instead of
	not exactly as needed global ns_cache.

2006-07-17  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/dns.c: Make sure given ttl and timeout are saved and used by dns cache

2006-07-17  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tests/ns_log.test: Adjusted tests for new syntax
	of the ns_logctl command.

2006-07-13  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/driver.c: Make sure upload stats lock is always unlocked.

	* nsd/nsconf.c:
	* nsthread/thread.c:
	* nsthread/pthread.c: Don't enforce an upper bound on the stack
	size, use the OS provided default.  It only makes sense to
	*reduce* the size of the stack if you have many threads and you
	know for sure you have low stack usage.  As this is (currently) a
	process-wide setting, you never can be sure...

	* nsd/cookies.c: Fix bug with missing path when setting cookies.
	* tests/cookies.test: Add tests so this doesn't happen again...

2006-07-13  Bernd Eidenschink  <eide@users.sourceforge.net>

	* nsd/return.c: Workaround in function ReturnCharData: mark
	connection to return in chunked encoding when the output encoding
	is not default UTF-8.

2006-07-12  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/log.c: Fixed command building in LogToTcl when
	registered script contains blanks.

2006-07-10  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Fixed crash when accessing writer
	sock after it has been submitted to the queue

	Fixed crash and put back functinality to make nsopenssl
	work again, in one of the previous changes that got broken.

2006-07-10  Stephen Deasey  <sd@groks.org>

	* nsd/nsd.h:
	* nsd/driver.c:
	* nsd/connio.c: Create wrappers for the driver callback functions
	and document. Wrap some of the messy error reporting code.

2006-07-08  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/limits.c:
	* tcl/limits.tcl:
	* nsd/Makefile:
	* include/ns.h:
	* nsd/nsd.h:
	* nsd/conn.c:
	* nsd/init.c:
	* nsd/tclcmds.c:
	* tests/ns_limits.test:
	* test/ns_conn.test:
	* tests/test.nscfg: Add new ns_limits_ commands to manipulate
	per-request limits. Not hooked up to request processing yet,
	requires some work to move conn allocation back into the driver
	code.

	* include/nsthread.h:
	* nsthread/time.c:
	* nsd/tclcache.c:
	* tests/ns_cache.test: Add per-cache default timeouts. Timeout
	values passed using the -timeout switch can now be absolute or
	relative to the current time. Large values are assumed to be
	absolute, small values relative.

2006-07-07  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/log.c: Fixed some struct arithmetic which ended up
	in writing into already freed memory.

2006-07-06  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/nsdb.text: Updated with new error message

	* include/ns.h:
	* nsd/conn.c:
	* nsd/queue.c:
	* nsd/return.c: Make ns_conn keepliave 0|1 to enable or
	disable keep-alive on current connection. Removed flag
	NS_CONN_KEEPALIVE and instead connPtr->keep is used to
	control keepailve behaviour.

2006-07-05  Bernd Eidenschink  <eide@users.sourceforge.net>

	* contrib/start-scripts/naviserver.SuSE: Added start script
	suitable for /etc/init.d which implements start, stop, restart,
	try-restart, realstop, version, probe, status. Configurable
	for use with or without watchdog and chroot environment.

2006-07-05  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/ns.h: Fixed so the compilation works again after
	cache.c and related changes.

	* nsd/log.c: Uses Ns_Fatal wrapper for Ns_SetLogFlushProc
	and Ns_SetNsLogProc

2006-07-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclcallbacks.c: Use our own wrapper Ns_TclCallbackProc()
	in ShutdownProc().

	* include/ns.h: Some cosmetic formatting to honour the 80-chars
	margin-width. Declared Ns_SetLogFlushProc() and Ns_SetNsLogProc()
	deprecated in favour of Ns_AddLogFilter() and Ns_RemoveLogFilter().

	* nsd/log.c: Make Ns_SetLogFlushProc() and Ns_SetNsLogProc() issue
	fatal message when used. Added Ns_AddLogFilter() and
	Ns_RemoveLogFilter() C-API calls as hook into new log processing.
	The log processing/cache is now always handled by the server. Users
	can register log callbacks and those will be invoked in the LIFO
	fashion for each log entry added by the Ns_Log() function or
	[ns_log] Tcl command. Each callback can prevent execution of all
	registered callbacks below by triggering Tcl error. One predefined
	callback is always registered: the callback to write to the standard
	error file-descriptor (routed to the server log file). Any log entries
	are always emitted there. The [ns_logctl] is extended to include
	[ns_log logctl register] and [ns_log logctl unregister] commands which
	in turn call the C-API calls from above. Those two serve for doing
	registration and unregistration of Tcl-based log callbacks. Each Tcl
	based log callbacck is called by the C-code as follows:

 		<callback> severity timestamp logmsg ?args?

        Example:
		# Declare Tcl callback
		proc logclbk {severity stamp logmsg myarg} {
		    # do something
		}
		# Register it with NsLog
		ns_log logctl register logclbk my_own_arg

		# Emit some log line
		ns_log notice "The test"

		# The callback will be executed as follows
		logclbk 1152034107:2399005 Notice "The test" my_own_arg

	The timestamp is in the string representation of the Ns_Time
	structure (<seconds>:<microseconds>).

        The [ns_log logctl truncate] semantic is changed: before it was
	used to truncate the log cache to a given number of bytes; now
	it truncates the log cache to the given number of cache entries.

2006-05-29  Vlad Seryakov  <seryakov@users.sf.net>

	* nsdb/dbtcl.c: Added -delimiter parameter to
	ns_getcsv that will allow parsing CSV files with different
	delimiters

2006-05-29  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/driver.c: Redefined driver hooks, removed not very
	well defined API functions. Added 2 new flags, NS_DRIVER_QUEUE_ONACCEPT
	and NS_DRIVER_QUEUE_ONREAD. They will tell driver when to queue
	socket, just after accept or after first netwrok read. Primary
	purpose to cut driver processing early for TCP driver that
	need its own protocol(ex. SMTP,POP3) or for others and UDP protocols,
	driver will read the request and will try to queue the socket after
	first read. Added new driver command DriverQueue, which will be called
	just before socket queue. Only special drivers that need to setup
	request url/protocol will use it, that's why new public API
	Ns_DriverSetRequest. Module installed request proc for
	method/url/protocol, like:

        Ns_RegisterRequest(server, "SYSLOG",  "/", RequestProc, NULL, srvPtr, 0);

        In order this proc will be called, socket need to set request line
	with "SYSLOG /", so it will be set in DriverQueue call just before
	driver will put the socket into connection queue. This change does
	not affect existing HTTP request processing.

	* nsd/queue.c: Removed old and unused API function.


2006-05-28  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclinit.c: Ported ns_ictl cancel and threads commands
	from AOLserver 4.5
	* nsd/driver.c: Removed meaningless Ns_Log call

2006-05-27  Vlad Seryakov  <seryakov@users.sf.net>

	* nsdb/dbtcl.c: Converted all Tcl string commands into
	object commands

2006-05-25  Vlad Seryakov  <seryakov@users.sf.net>

        * nsd/driver.c: Updated NsTclWriterObjCmd to use TclVFS open call

	* nsd/sock.c:
        * nsd/driver.c: As Stephen corrected, Ns_SockTimedWait should
        treat timeout as NULL for indefinite wait as in other similar calls.
        WriterThread will pass timeout with 0 values to just check if
        socket is writable or not.

2006-06-19  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/fastpath.c:
	* nsd/adpeval.c: Use Ns_CacheDeleteEntry instead of
	Ns_CacheFlushEntry to prevent genuine flush stats being inflated.

	* tcl/cache.tcl:
	* nsd/nsconf.c:
	* nsd/dns.c: Update to new API.

	* nsd/nsd.h:
	* nsd/server.c: Remove tcl cache timeout param in anticipation of new
	limits API.

	* nsd/tclcmds.c: Remove ns_cache _get _set _exists _info
	commands. The first three are racey and can be emulated with _eval
	and the new -force switch.  The new -contents switch to the _stats
	command replaces _info, discouraging racey check-and-set usage.

	* nsd/tcltime.c:
	* nsd/tclobjv.c: New Ns_ObjvTime parse callback for the Ns_Time
	type. Handy for passing absolute time deadlines to routines which
	timeout.

	* include/ns.h:
	* nsd/cache.c: New Ns_CacheResetStats routine.

	Ns_CacheGetConfig removed -- caches are immutable; the current
	settings can be looked up in the config file.

	Directly expire entries from within all routines which return one,
	but but only if the value is not null, indicating no concurrent
	update is in progress.

	Use Ns_CacheDeleteEntry to remove an entry from the cache without
	updating the stats. Flush stats should reflect explicit flushes
	only.

	Log stats when a cache is destroyed.

	* nsd/tclcache.c: ns_cache_create now takes a -maxentry option
	which is the maximum size of an entry allowed in the cache. This
	prevents one large entry completely emptying an otherwise usefully
	full cache.

	The ns_cache_create -timeout switch has been removed in
	anticipation of a general purpose limits scheme.

	The -timeout option is now expected to be an absolute time in the
	future, not an offset from the current time. This is awkward to
	use manually, but should not be needed with the above mentioned
	limits scheme. The -ttl option has been renames -expires and is
	also an absolute time.

	ns_cache_eval now takes a -force switch which will unconditioanly
	replace any exiting entry, whether it has expired or not. Replaces
	_set.

	ns_cache_stats -content dumps the size and expirey for each
	entry in the cache. Adding the -reset switch to either mode resets
	the stats to zero.





	* tests/ns_cache.test: Try to exercise the underlying Ns_CacheFind
	harder with some more flush tests.

2006-05-19  Vlad Seryakov  <seryakov@users.sf.net>

        * tclimg.c: Removed compiler warnings

        * include/ns.h:
        * nsd/tclobjv.c: Added Ns_ObjvEval for runtime
        arguments evaluation and extended ns_parseargs so that
        params in form {-name {=$script}} will be assigned with default
        value of the script result.

2006-05-18  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/sched.c: Make scheduler queue Events increments by 50 instead of 1000
	in order not to waste a lot fo memory

2006-05-10  Vlad Seryakov  <seryakov@users.sf.net>

        * nsd/sock.c: Make Ns_SockTimedWait have NULL as timeoutPtr so it will
        check for immediate condition of the socket without waiting.

        * nsd/nsd.h:
        * nsd/driver.c: Improved WriterThread to not to block on sending
        data and honor timeout if socket still not ready.

        * nsd/return.c: Added Accept-Ranges header as default to
        inform clients that we support range requests. Tested with
        mplayer HTTP streaming.

        *tests/testserver/pages/timeout.tcl:
        *tests/testserver/pages/400return.adp: Added missing files

2006-05-10  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/ns_cache.test:
	* include/ns.h:
	* nsd/cache.c:
	* nsd/tclcache.c: Added timeout parameter to Ns_CacheCreateEx
	to assign cache-specific timeout which will be used instead of
	global config.tcl.cachetimeout and will eliminate specifying
	-timeout on every ns_cache_eval call. If specified as 0 on cache
	create, cache will behave as before, taking -timeout or using
	global value from the config. Introduced new API function
	Ns_CacheGetConfig that returns configured cache parameters.

	* nsd/tclcmds.c: Added new public function Ns_CacheGetExpiration
	and Tcl command	ns_cache_info that returns entry size and
	expiration if set.

	* nsd/nsconf.c:
	* nsd/dns.c: Updated to reflect API  change and added new config
	parameter dnswaittimeout which is set to 0 by default

2006-06-14  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclinit.c: Fixed return value of non-void call.
	* nsd/cache.c:  Fixed Ns_CacheSetValueExpires() to correctly
	set expiry time of the entry.
	Changed Ns_CacheFindEntry() NOT to auto-expire expired entries
	as this collides with Ns_CacheWaitCreateEntry API call.

2006-05-26  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/return.c:
	* nsd/tclrequest.c:
	* nsd/tclresp.c:
	* nsd/tclcallbacks.c:
	* nsd/tclcmds.c:
	* nsd/tclcache.c:
	* nsd/tclinit.c:
	* nsd/tcljob.c:
	* nsd/conn.c:
	* tests/timeout.test: Catch Tcl errors with error code NS_TIMEOUT
	and return an HTTP 503 Unavailable response. Update some Tcl
	commande to set the NS_TIMEOUT error code.

	* nsd/queue.c:
	* nsd/return.c:
	* tests/test.nscfg:
	* tests/errordoc.test: Make sure custom error documents return the
	correct HTTP error code.

2006-05-13  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* sampe-config.tcl.in: Loads nsproxy module and initializes
	with all the default values. The default values are the same
	as ones compiled in the code. Those are just listed for the
	illustration purposes.

	* nsproxy/Makefile
	* nsproxy/ns_proxy.man:
	* nsproxy/ns_proxy.test:
	* nsproxy/nsproxy.c:
	* nsproxy/nsproxy.h:
	* nsproxy/nsproxylib.c:
	* nsproxy/nsproxymod.c: Summary of changes below:

	o. Fixed deadly embrace between the reaper and user threads.
	o .Improved reaper functionality and made -minslaves/-maxslaves
	   behave properly.
	o. Made all pool config options now settable over the configuration
	   file. The config command now properly returns result dependent
	   on the command arguments in style of other similar Tcl commands,
	   like [fconfigure] for example.
	o. Added rudimentary but sufficient C-API for evaluating Tcl
	   code over the proxy from within of the C-code. One must include
	   nsproxy.h and link with -lnsproxy library. See nsproxy.h for the
	   list of supported calls.

	Code is now fairly tested and can be evaluated in lab environment;
	consider feature full but still beta-quality for now.

	* tests/ns_proxy.test: First couple of tests. Still more
	to come...

	* tests/test.nscfg: Added loading of nsproxy in the test server.

	* nsd/tclenv.c: Fixed PutEnv() to work correctly on all platforms we
	support. The problem was that it was not simple to unset an env
	variable w/o empolying some dirty tricks.

	* configure.in: Added check for unsetenv() function.

2006-05-10  Vlad Seryakov  <seryakov@users.sf.net>

        * nsd/return.c: Make ReturnCharData to use Ns_WriteConn
        when sendRaw is specified, so pure binary data can be delivered

2006-05-07  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/ns_adp_compress.test: Updated result, tested on Firefox
	* nsd/conn.c:
	* nsd/return.c:
	* tests/ns_conn.tests: Added keepalive command to
	ns_conn to enable/disable keepalive for connection, can
	be usefull when peersistent connection is needed without
	full HTTP/1.1 comformance

2006-06-06  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* Makefile: Included nsproxy into make process

2006-05-06  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/ns.h
	* nsd/pathname.c: Added Ns_BinPath. I'm not sure if this
	was already there and somebody removed it or not, but this
	one is really handy.

	* nsproxy/Makefile
	* nsproxy/ns_proxy.man:
	* nsproxy/nsproxy.c:
	* nsproxy/nsproxy.h
	* nsproxy/nsproxylib.c:
	* nsproxy/nsproxymod.c: Added ns_proxy mod from AOLserver 4.5.
	Improvements vs. the original code:
          o. proxy handles can be used as Tcl commands for simpler
	     OO-like programming
	  o. proxy slaves can be told to expire automatically
	     after some predefined idle time
	  o  proxy slaves can setuid() to some other user ID
	     if the parent process runs as superuser.
	  o. proxy subsystem is garbage-collected properly on exit

	NOTE: ns_proxy module is work in progress and is this not
	included in the standard make machinery. There are still
	things to do: complete the doc, write testsuite.

2006-05-01  Vlad Seryakov  <seryakov@users.sf.net>

	* nsdb/util.tcl: Adding dbcloseonexit parameter that will
	register atexit handler for closing all db pools on server exit
	* Makefile: Added contrib into distfiles

2006-04-30  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/nsmain.c: Reorganized so first call to a Tcl_FindExecutable()
	is done after all ns_fork's - see large comment in-place.
	Assure Tcl version is logged to the log-file.
	Added descriptive run state enumerator so run states can now be
	easier tracked by looking at the code.

	* nsd/binder.c: Made ifdef _WIN32 more clear and unified.
	At some point we should create separate file in order not
	to obfuscate code with numerous ifdef's.

2006-04-22  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/Makefile:
	* nsd/event.c: Add new event driven I/O API. Unlike the existing
	task and sockcallback mechanisms, this deals only with IO, not threads
	and allocates no memory at runtime, making it suitable for the
	main driver thread, spooler etc.  Things should be merged at
	some point.

2006-04-19  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsd.h:
	* nsd/nsconf.c:
	* nsd/server.c:
	* nsd/fastpath.c:
	* tests/test.nscfg: Make page cache process global rather than per
	virtual server.

2006-04-19  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/driver.c: Perform reverse lookup on hostname given the IP
	address only if hostname param not specified in nssock section
 	for the socket driver.
        In some situations, reverse lookup will not be successful which
	inhibits us to start properly (which we could).

	* nsd/tclinit.c: Removed traces of ns_tls support.

2006-04-18  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclinit.c:
	* nsd/tclcmds.c: Remove ns_tls implementation

2006-04-18  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/ns_schedule.test: Add a couple of tests for scheduled
	procs.

	* nsd/cache.c:
	* nsd/dns.c:
	* nsd/nsconf.c: Use new API for DNS cache code.

	* nsd/nsmain.c:
	* nsd/tclinit.c: Run command interpreter in seperate thread,
	leaving main thread to shut down the server cleanly when the exit
	command is run.

2006-04-15  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsmain.c (Ns_Main): Copy executable name as memory is freed
	and reused later during Tcl initialisation.

	* nsd/tclcmds.c: Cache commands require a virtual server context.
	* nsd/tclcache.c: Don't artificially inflate flush stats when a
	Tcl script under evaluation errors.

	* nsd/cache.c:
	* tests/ns_cache.test: Clarify responsibilities of
	Ns_CacheCreateEntry, and Ns_CacheWaitCreateEntry. The first
	guarantees an Ns_Entry as a result and handles expirey, the second
	can return NULL only on timeout waiting for another thread to
	update the same entry.  Previously a simultaneous flush would also
	cause a NULL return -- now however the entry is recreated. Fix bug
	with ExpireEntry: unset the value but do not delete the entry.

2006-04-15  Vlad Seryakov  <seryakov@users.sf.net>

	* include/nsthread.h: Introduced new error code NS_FTAL
        * nsd/driver.c: Made handling UDP driver more reliably against
        QoS attacks and error handling.

2006-04-14  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclinit.c:
        * nsd/tclcmds.c: Added new Tcl command ns_tls for
        thread specific local caches. Tcl tls is ns_set structure,
        so thread specific storage is key value pairs.

2006-04-14  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tests/ns_gifsize.test:
	* tests/ns_jpegsize.test: Fixed to match new error messages

	* nsd/cache.c: Fixed Ns_CacheWaitCreateEntry() NOT to delete
	existing cache entry in case entry is expired.
	This is one possible fix for this call, as it was trashing
	memory by reusing already deleted (expired) entries before.
	Another possible fix is to delete and re-create expired
	entry, but this costs more time, although it may be a more
	correct thing to do.

2006-04-13  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclcache.c: make sure the value is zero ended

2006-04-13  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclimg.c: Added processing for PNG files. Also added
	commands to compute image type, mimetype and size regardless
	of the image type, by performing internal magic lookup to
	decide which type of image they are handling.

	* nsd/tclcmds.c: Added ns_imgsize, ns_imgtype, ns_imgmime
	commands. These commands operate on any supported image:
	gif, png and jpeg. The ns_pngsize is added to complete
	ns_jpegsize and ns_gifsize set, although those are deprecated
	in favour of more simple ns_img[].

2006-04-06  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/sock.c: Added Ns_SockWait function for compatibility reasons,
	i.e. nsopenssl uses this.

	* nsd/tclcache.c: extar byte allocating is not necessary

2006-04-05  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/http.test: Disable writer test for now to be able to
	run other tests

	* tests/nscache.test: Added test for two new commands
	* nsd/tclcache.c:
	* nsd/tclcmds.c: Added 2 new cache commands ns_cache_get and
	ns_cache_set for easier cache manipulation

2006-03-30  Ibrahim Tannir <itannir@users.sf.net>

	* nsd/adpeval.c:  added translation binary in ParseFile,
	otherwise reading Windows files may break (size != n).

2006-03-28  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclresp.c: Fixed bad return value(s) in NsTclHeadersObjCmd
	and WritevObjs. Reformatted and indented.

2006-03-27  Bernd Eidenschink  <eide@users.sourceforge.net>

	* contrib/nsd.tcl: Added smtp configuration parameters

2006-03-23  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/conn.c: Added new public API function Ns_ConnSetPeer

2006-03-21  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/binder.c: BindUnix should not delete the socket file otherwise
	clients will not be able to connect to it. Changedd API to support
	optional accesss mode for the Unix domain file. Added DGRAM socket
	types for Unix domain sockets.

2006-03-19  Vlad Seryakov  <seryakov@users.sf.net>

	include/ns.h:
        nsd/driver.c:
        nsd/conn.c: Added new public functions Ns_DriverSockContent,
        Ns_ConnSockContent and Ns_ConnSetContentSent. Imporved UDP driver
        support.

2006-03-18  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Set spoolerthreads to 0 by default
	* nsd/sockcallbacks.c: Changed timeout handling

2006-03-17  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/sockcallbacks.c:
	* nsd/tasks.c: Updated to support timeouts in socket
	callbacks, minor reformats

	* configure.in:
        * include/ns.h:
        * nscp/nscp.c:
        * nsd/crypt.c:
        * nsperm/nsperm.c: For Linux systems use native crypt which supports
        MD5 digests, increase encryption buffer

2006-03-13  Vlad Seryakov  <seryakov@users.sf.net>

	* Makefile: Made install modular so parts can be installed
	without installing everything

2006-03-12  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/util.tcl: fixed typo in ns_setexpires proc

2006-03-12  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* drv/driver.c: Fixed endless loop in SpoolerThread.
	Also reformated, newly indented and made more readable.

	* nsd/nsd.h: Cosmetic changes. Added typedefs for
	some internally used structures. Added typdefs for new
	NsBlockSignal, NsRestoreSignal and def for NS_SIGPIPE.

	* tests/testserver/modules/testhttp.tcl: Added
	nstest_http_write function to upload content.
	Fixed to report HTTP status as often as possible.

	* tests/http.test: Removed ns_log warnings before
	running http tests 4.4, 4.5 and 4.6

	* tcl/http.tcl: Added _ns_http_write wrapper to
	uplad content.

	* tests/ns_thread.test: Thread ID's can be very small
	(single digit numbers) on Solaris. Also, fixed regexps
	for testing thread/mutex/condvar handles on Solaris.

	* nsd/nsmain.c:
	* nsd/unix.c:
	* nsd/nswin32.c: Added blocking for signals, more
	specifically for the SIGPIPE signal.
	Otherwise, our process may get killed during net tests.

2006-03-10  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/callbacks.c:
	* nsd/tclcallbacks.c:
	* nslog/nslog.c: Remove old variants of shutdown registration:
	Ns_RegisterServerShutdown(), Ns_RegisterAtServerShutdown() and
	Ns_RegisterShutdown().

	Ns_RegisterAtShutdown() now takes a Ns_ShutdownProc callback, whos
	signature includes an absolute timeout arg. This callback will be
	run twice:  First with a NULL timeout to indicate shutdown
	processing should be initiated. If shutdown work can be completed
	quickly, it should be done here.  Second, with a timeout parameter
	which can be passed to e.g. Ns_CondTimedWait() etc.

	The idea is to make the pattern NsStartFooShutdown(),
	NsWaitFooShutdown(toPtr) cleaner to implement.

2006-03-10  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/testserver/modules/testhttp.tcl:
	Updated to handle network errors and perform proper reporting

2006-03-10  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tests/testserver/modules/testhttp.tcl:
	Made self-consistent; it does not attempt to use unpublished
	Tcl API calls. Also, preform implicit network-line-end
	translations by Tcl sock handling instead of passing this task
	to user. Means: data sent and received is always in normalized
	internal new-line format instead of new-line/carriage-return format.

	* tcl/http.tcl: The _ns_http_readable was broken as it did not
	correctly refresh the number of bytes in the socket after waiting
	for the data to arrive.

	* tests/http_byteranges.test:
	* tests/http_chunked.test: Data returned from nstest_http calls
	is now in standard internal newline format and not in the network
	format, so we had to fix some regexps which check returned results
	accordingly.

2006-03-09  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tcl/cache.tcl:     Reformated, added proper function
	* tcl/charsets.tcl:  headers, newly indented.
	* tcl/compat.tcl:    The http.tcl and sendmail.tcl are
	* tcl/fastpath.tcl:  rewritten to take advantage of
	* tcl/file.tcl:      automatic end-of-line handling of
	* tcl/form.tcl:      Tcl channels. Also, fixed some bugs
	* tcl/http.tcl:      in EOF handling in both files. Fixed
	* tcl/nstrace.tcl:   bug in line-break algorythm for
	* tcl/sendmail.tcl:  quoted-printable MIME content with
	* tcl/stats.tcl:     non-ascii data in sendmail.tcl.
	* tcl/util.tcl :     The nstrace.tcl is now self-contained
        and requires, nor loads, any external modules.

	* nsd/init.tcl: Moved introspective script to nstrace.tcl.
	The nstrace is now the sole interface for handling script
	generation for interp initializations. Please look into
	the tcl/nstrace.tcl for more information.
	Removed ns_init and ns_cleanup procedures and use trace
	callbacks instead.

	* nsd/queue.c (ConnRun): uses Ns_ConnClearQuery() to
	avoid code duplication.

2006-03-08  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/nsd/sock.c (Ns_SockTimedConnect2) Sets errno to ETIMEDOUT
	if unable to connect and the optional timer is expired.

	* tcl/debug.tcl:
	* tcl/prodebug.tcl: Removed ancient TclPro support files

2006-03-07  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Still small experiments with spooler bug

2006-03-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* sample-config.tcl: fixed comment about default
	username/password for stats interface.

	* tcl/ttrace.tcl: removed

	* tcl/nstrace.tcl: new file w/o implicit relation
	to XOTcl package. All packages must now register
	callbacks to nstrace by providing their own code.
	The nstrace is now always loaded/present in the
	interp (see changes to nsd/init.tcl below).

	* tcl/stats.tcl: fixed some broken expressions,
	perhaps due to a bug in Tcl expression evaluator

	* nsd/init.tcl: reorganized for better readability.
	All temporary procs are now prepended "_" instead
	of "_ns_" prefix. Added clarification comment about
	possible choices for interp initialization strategy.
	Always load nstrace.tcl library even if not configured.
	This allows extensions to use nstrace::isenabled
	procedure to find out if the trace is active or not
	and/or to register their own tracer implementations.

2006-03-03  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Use driver proc in WriterThread to ensure
	proper driver's protocol processing, minor cleanups and changes to
	support UDP socket driver

2006-03-02  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/request.c:
	* nsd.conn.c: Add versionstring into Ns_Request struct
	and made request parser more generic regarding protocol version
	to allow other http-like protocols to be parsed by same code

	* nsd/driver.c: Some minor cleanups and temp hack in SpoolerThread
	until the real bug will be discovered

2006-03-01  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c:
	* tests/http.test:
	* tests/test.nscfg
	* tests/testserver/modules/testhttp.tcl: Fixed error reporting during
	request parsing, now server returns 414/400 return codes and honors
	maxinput/maxheaders parameters. Test http-4.5 does not hang actually
	but with sndbuf/rcvbug set to so small values it takes very logn time to
	read the request, by putting Ns_Log in SockRead i was seeing reading by
	64/192 bytes but the server was operational.

2006-02-28  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/encoding.test: Add test which exposes off by 1 bug in
	encoding buffer management reported by Vlad on the 24th.

	* nsd/driver.c:
	* tests/test.nscfg:
	* tests/http.test:
	* tests/tclresp.test:
	* tests/testserver/modules/testhttp.tcl:
	* tests/testserver/pages/2048bytes: Add some test which verify
	basic HTTP read/write opperations and limits.  Highlights some
	bugs...

2006-02-28  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/http.tcl: Added simple http proxy, disabled by default
	* include/ns.h:
	* nsd/tclcmds.c:
	* nsd/tclrequest.c: Add ns_register_proxy Tcl command and make
	Ns_RegisterProxyRequest public API

2006-02-27  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/init.tcl: reverted change to way global modules are
	loaded, as this was A Bad Thing.

2006-02-27  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/connio.c (Ns_ConnSend):
	* tests/tclresp.test: Fix bug with buffer management triggered by
	data too large to be sent in a single call to the OS. Don't copy
	unsent iovec's around if there are no additional ones to be added
	to the set.

2006-02-25  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/dns.c: Untabify and reformat.

2006-02-25  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tcl/ttrace.tcl: added implicit support for XOTcl 1.3
	and modified [load] tracer to load packages which were
	not traced.

	* nsd/init.tcl: global modules loaded before per-server
	modules.

2006-02-24  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/connio.c: check for buffer size -1 because
	Tcl_UtfToExternal fills the buffer no to the end

2006-02-23  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/init.tcl: Untabify and reindent. Use eq and ne when testing
	string equality. Add some debug logging to the module loading
	process.

	* nsd/tclresp.c:
	* tests/tclresp.test:
	* tests/http_chunked.test: ns_headers now queues, but does not
	flush, the headers.  Headers are sent when the first data packet.

	ns_write will send multiple args efficiently using
	scatter/gather IO.

	ns_return no longer handles character encoding redundantly. Now
	handled by the underlying Ns_WriteCharConn().

	* nsd/return.c: Let connio.c handle character encoding.

	* nsd/conn.c: Use Tcl boolean objects instead of ints.

	* configure.in:
	* include/ns.h:
	* nsd/connio.c: Make Ns_ConnSend() write all the buffers it is
	given to the connection, writing in batches up to the OS limit for
	max number of iovec buffs. Previous behaviour was to give up
	after buffer 16.

	UIO_MAXIOV is now detected as on some OS' it is significantly
	larger than the old default of 16 (e.g. on Linux it is 1024).

	Increased the IO buffer size used for encoding character data
	before sending and for transfering data from disk to network. Up
	from 2k to 8k. This is allocated on the stack so can't be too
	big. It is important for this buffer to be large as it controls
	the number of network packets used to send common items such as
	ADP pages when the encoding != utf-8.

	New routines Ns_ConnWriteV() and Ns_ConnWriteVChars() expose a
	scatter/gather interface for sending data. WriteVChars encodes
	character data as required and calls down to WriteV. WriteV
	performs HTTP chunked encoding if required and calls down to
	Ns_ConnSend().

	Ns_ConnClose now flushes unsent queued headers/data before
	closing, allowing headers and first data to be sent as a single
	packet in some cases.

	* nsd/sock.c: Untabify, reformat and move code around. Add new
	comments and clarify existing ones. Add some debug logging for
	socket send timeouts.

2006-02-21  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclthread.c:
	* tests/ns_thread.test: Add "eval" subcommand to ns_mutex
	etc. which takes a lock, evals the given script, then ensures the
	lock is unlocked before returning. Useful when the script has an
	error.

	* nsd/nsd.h:
	* nsd/server.c:
	* nsd/tclcmds.c:
	* nsd/tclthread.c:
	* tests/ns_thread.test: Thread synchronization commands can now
	take a name rather than a reference and the object will be auto
	created and initialised.

2006-02-20  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c:
	* nsd/nsd.h:
	* nsd/connio.c: Changed writer to duplicate given memory buffer because
	using Tcl_Obj between threads is not thread-safe. Renamed NSQueueWriter into
	NsWriterQueue to be in the same convention with Tcl API.

2006-02-19  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/getopt.h: Remove unused header.

2006-02-19  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/adpcmds.c:  Replaced references to Ns_DStringTrunc
	* nsd/adpeval.c:  and Tcl_DStringTrunc with Ns_DStringSetLength
	* nsd/adpparse.c: and Tcl_DStringSetLength.
	* nsd/adprequest.c:
	* nsd/connio.c:
	* nsd/driver.c:
	* nsd/dstring.c:
	* nsd/fastpath.c:
	* nsd/form.c:
	* nsd/pathname.c:
	* nsd/request.c:
	* nsd/return.c:
	* nsd/server.c:
	* nsd/tclcallbacks.c:
	* nsd/tclhttp.c:
	* nsd/tclobjv.c:
	* nsd/url2file.c:
	* nsd/urlopen.c:

	* nsd/log.c: Fixed potential freeing of already
	freed memory during LogFlush/LogFreeCache sequence.

2006-02-18  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c:
	* nsd/tclcmds.c:
	* nsd/nsd.h: Updated writer support, Tcl command renamed to
	ns_writer with options submit, submitfile, list

2006-02-15  Vlad Seryakov  <seryakov@users.sf.net>

	src/driver.c:
	src/nsd.h: Added maxqueuesize parameter to limit incoming
	sockets queue size to prevent possible DoS attacks,
	default size set to 256.
	include/ns.h: Made struct sockaddr_in sa public in
	Ns_Sock and Sock in private nsd.h to have access to it
	from communication modules without using private nsd.h

	src/driver.c:
	nsd/nsd.h:
	nsd/tclcmds.c: Added ns_queue_writer Tcl command that submits
	Tcl_Obj to the writer thread. Writer thread will send this Tcl
	object to the client.

2006-02-13  Ibrahim Tannir  <itannir@users.sf.net>
	* nsd/nswin32.c: fixed assigning the stdin, stdout, stderr channels
	  in order for Tcl to attach them properly when a new thread/interp
	  is created.

2006-02-08  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* configure.in:
	* m4/tcl.m4: added TEA 3.5. Scrapped testing for
	MACOSX_DEPLOYMENT_TARGET.
	* nsd/cache.c: Implemented RFE #1427620
	* tests/test.nscfg: Set cachetimeout to 360 secs
	* tests/ns_cache.test: Reduced number of threads
	testing cache stability from 100 to 16 as it was
	blowing up smaller machines
	* doc/src/man.macros: new file
	* doc/src/README.doc: clarify that "man -l" will
	only work on Linux when using gzipped manpages.

2006-02-08  Bernd Eidenschink  <eide@users.sourceforge.net>

	* nsdb/util.tcl:
	* nsperm/init.tcl:
	* tcl/stats.tcl:
	* tcl/file.tcl:
	* tcl/cache.tcl:
	* tcl/util.tcl:
	* tcl/ttrace.tcl: "legacy" files, contd.

2006-02-07  Bernd Eidenschink  <eide@users.sourceforge.net>

	* tcl/form.tcl:
	* tcl/http.tcl:
	* tcl/charsets.tcl:
	* tcl/fastpath.tcl:
	* tcl/sendmail.tcl: fixed non-braced expressions and standardized
	comparisons with TCL string operators. Thanks to Gustaf Neumann
	for providing the fixes! There are still some legacy files left.

2006-02-07  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsthread/nsthreadtest.c: Includes "config.h" to get
	STATIC_BUILD defined.

	* tcl/ttrace.tcl: Removed compat code for Tcl threading extension.
	Arranged to be loaded only once per virtual server.
	Changed license to Mozilla.

	* sample-config.tcl.in:
	* nsd/init.tcl: Trace inits now controled under ns/section/server/tcl
	and lazyloader ns_param.

2006-02-06  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tcl/ttrace.tcl: new file (implements RFE #1166553)
	* nsd/init.tcl: added hooks to use trace-based interp inits
	* sample-config.in: add setup for trace-based interp inits
	(disabled per default)
	* Makefile: include sample-config.tcl.in in "make dist"
	* NEWS: added remarks about new trace interp inits

2006-02-05  Stephen Deasey <sdeasey@users.sf.net>

	* nsd/urlspace.c: Remove 'doit' variables with local scope to
	prevent warning about unused variable with same name in function
	scope.

	* naviserver.rdf: Update version info in DOAP project description.

	* configure.in: Emit a warning if zlib compression support is
	requested (default) but the zlib.h header or the compress2
	function can not be found.

	* Makefile:
	* configure.in:
	* include/config.h.in:
	* include/nsconfig.h.in:
	* include/nsversion.h.in:
	* include/ns.h:
	* include/nsthread.h:
	* nsthread/thread.h:
	* include/.cvsignore: Autoconf config defs now saved in private
	config.h which is not installed so we don't pollute the namespace
	of modules.  Version info now substituted into nsversion.h.
	* nsd/compress.c:
	* nsd/main.c:
	* nsd/nsd.h:
	* nsd/tclcallbacks.c:
	* nsd/tclobjv.c: Include the private nsd.h header to pick up
	config definitions.

	* tests/ns_info.test: Fix test for ns_info pools when Tcl is
	built with --enable-symbols.  Fix test for ns_info builddate for
	night owls.

2006-02-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* configure.in: bumped working version to 4.99.2

	* TAG naviserver-4.99.1-release.

2006-02-03  Vlad Seryakov <seryakov@users.sourceforge.net>

	* include/Makefile.module.in: Added clean-bak target

2006-02-03  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* sample-config.tcl.in: new file
	* sample-congig.tcl: removed
	* nsd/nsmain.c: added LogTclVersion to log the version
	of the currently used Tcl library on server startup.

2006-02-02  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsthread/nsthreadtest.c: malloc testing uses random
	block sizes of up to 16K to better simulate real-world.

2006-02-02  Bernd Eidenschink  <eide@users.sourceforge.net>

	* README: synced Tcl and NaviServer ./configure arguments
	in compile example. Added note for use of autogen.sh.

2006-02-01  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/Makefile.global.in: CP uses -pR options as
	those are supported on all platforms we currently
	compile on (Solaris, Linux, Mac OSX).

	* Makefile: added find expression to purge junk files
	before making the distribution tarball.

	* README: Reflect 4.99.1 and 8.4.12 Tcl.

2006-01-24  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/urlspace.c (JunctionFind): fixed typo in which caused
	code to fail to compile with a standard C compiler.

	ATTENTION: C-compatibility affected.

	* include/ns.h
	* nsd/sock.c:
	* nsd/tcljob.c:
	* nsd/tclsock.c:
	* nsd/nssock.c: Implemented RFE #1413620. Changed
	all C-API calls accepting an integer timeout in
	seconds/msecs to allow Ns_Time struct ptr instead.

2006-01-23  Vlad Seryakov  <seryakov@users.sf.net>

	* m4/tcl.m4: Fixed bug with extra single quote for
	bash 3.1
	* tests/nscache.test:
	* nsd/tclcache.c:
	* nsd/tclcmds.c: Added ns_cache_exists command for cases when
	just existence needed without retrieving the whole cache entry

2006-01-23  Bernd Eidenschink  <eide@users.sf.net>

	* tcl/sendmail.tcl: Added character encoding for subject and body,
	message-id creation, quoted printable text and AUTH PLAIN
	mechanism (all optional).
	* doc/src/ns_sendmail.man:
	* doc/src/README.doc:
	* doc/man/ns_sendmail.n:
	* doc/html/ns_sendmail.html: Doctools documentation file for new
	ns_sendmail functionality as well as examples created with dtplite

2006-01-20  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/file.tcl: Changes to use new cache API
	* tcl/util.tcl: Added ns_fileread/ns_filewrite procs
	* tcl/stats.tcl: fixed all bugs and it runs now under naviserver
	properly
	* m4/tcl.m4: check for USE_THREAD_ALLOC in tclConfig.sh
	* Makefile: simplify installation  structure, create conf/, logs/,
	tcl/ directories.
	* sample-config.tcl: re-formatted and make it run, added more
	descriptions
	* contrib/nsd.tcl:
	* contrib/mimetypes.tcl: added new example configs
	* include/Makefile.global.in: chanage to simpler installation
	structure
	* contrib/index.adp: Added default index page

2006-01-19  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/driver.c: Fixed bug in Ns_DriverSockRequest when existing
	structure is used. Returns NS_ERROR now if cannot parse given url.

2006-01-18  Vlad Seryakov  <seryakov@users.sf.net>

	* sample-config.tcl: Added spooler/writer related options
	* nsd/driver.c:
	* nsd/nsd.h: Rewrote driver's spooler/writer support
	to make them cleaner and to support multiple spooler/writer
	threads for each driver. Before that, global spooler variables
	got overwritten if multiple drivers are loaded. Also,
	simplified driver thread, removed rotating driver's list, in
	case of usual one driver operation that was just waste of CPU
	cycles. For multiple drivers, spawning separate thread for each
	would be better solution, it can be considered for future driver
	encancements.

2006-01-17  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c: Improved Writer thread support, now it is
        possible to have multiple writer thread for better performance.
        * nstread/thread.c: Make Ns_ThreadSetName to accept sprintf-like
        variable list of arguments
	* nsd/sched.c:
	* nsd/tcljob.c
	* nsd/queue.c:
	* nsd/task.c: Changed setting thread name using new sprintf-like
	arguments

2006-01-16  Bernd Eidenschink  <eide@users.sourceforge.net>

	* tests/ns_base64encode.test: Basic tests for ns_base64encode
	and ns_base64decode
	* nsd/uuencode.c: Fixed appending of extra newline in certain
	line break situations. Fixes Bug #1407112.

2006-01-15  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c:
	* nsd/connio.c:
	* nsd.nsd.h: This is experimental feature to use separate writer
	thread for sending large files to multiple clients. By default it
	is disabled so nobody should be affected by this feature. Still need
	more testing but can be very usefull, keeping it in CVS makes it easier
	to track then in local copy, i keep loosing local modifications
	all the time.

	* nsd/driver.c: Changes poolto from -1 to 60 seconds in DriverThread and
	SpolerThread to wake up from pool. Once a minute will not kill the server
	but will ensure it will never get into race condition.

2006-01-14  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclmisc.c (NsTclHTUUEncodeObjCmd): properly handles
	binary strings. Fixes Bug #1405988.

	* nsd/driver.c (NsStopDrivers): does not attempt to trigger
	spooler pipe if spooler thread disabled.

2006-01-13  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	ATTENTION: Tcl compatibility affected.

	* include/ns.h:
	* nsd/conn.c:
	* nsd/pathname.c:
	* nsd/tclcallbacks.c:
	* nsd/tclinit.c:
	* nsd/tclrequest.c:
	* nsd/tclsched.c:
	* nsd/url2file.c:
	* tests/ns_register_filter.test:
	* tests/ns_register_proc.test:
	* tests/url2file.test: Implemented RFE #1404901.

2006-01-11  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/driver.c:
	* nsd.nsd.c:
	* nsd/tclcmds.c: Added spooler support which handles
	upload process in separate thread. During the uploading new command
	ns_upload_stats is available which accepts full url with query
	parametrs of the uploading connection. On uploading finish,
	statistics is cleared from the memory. Spooler can be disabled
	using ns_param spooler false in the nssock section of nsd.tcl.

2006-01-11  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/set.c (Ns_SetDelete): fixed off-by-one error when
	compacting the set after element deletion.

2006-01-10  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/driver.c (DriverThread): Added some clarifying comments

2006-01-07  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/driver.c (DriverThread): Add Push() macro to clarify list
	processing of sockets and drivers.

2006-01-06  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* tests/ns_conn.test: fixed basic command test to recognize
	new "contentsentlength" command option.

2006-01-04  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* configure.in:  added test for inet_ntop.
	* nsthread/reentrant.c: use inet_ntop when available which fixes a
	bug on 64 bit ppc, at least under linux.
	* nsd/conn.c: added option to [ns_conn] to set/query contentsentlength
	for getting the correct length into the logfile, when files are
	delivered via event driven I/O. Thanks to Gustaf Neumann for providing
	above fixes.

2006-01-04  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/Makefile:
	* nsd/nsmain.c:
	* nsd/sock.c:
	* nsd/task.c: Backport AOLserver task queues.  Callbacks are
	registered to run in a seperate thread in response to socket
	read/write events.

2005-12-30  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/init.c:
	* nsd/urlspace.c:
	* tests/url2file.test: Split the urlspace by key ID and remove the
	global lock. Remove unused Ns_ServerSpecific*() routines.

	Make NsUrlSpecificWalk() emit an entry for both inherit and
	noinherit data, identifying each with a keyword.  Don't emit the
	server name, which is redundant, and separate the URL from the
	filter. (RFE: 1377113)

	* nsd/op.c:
	* nsd/url2file.c: Clarify naming of urlspecifc walk callbacks.

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/init.c:
	* nsd/proc.c:
	* nsd/cache.c: Global hash of cache names removed; access no
	longer available via Ns_CacheFind() or ns_cache_names.  Caches
	have unique locking requirements and lifetimes which could be
	violated by e.g. running ns_cache_stats on a thread local cache as the
	thread is exiting.

	New Ns_CacheCreateEx() allows creating a cache which has both a
	size and a time limit.

	Caches with time limits are calculated differently.  Previous
	behaviour was to periodically check the last access time of each
	cache entry and flush those which had expired.  A busy cache could
	grow without bound.  New behaviour is to check for expirey each time
	an entry is retrieved from the cache.  All caches can (and should)
	be size limited.  Timeouts may be specified per cache and per
	entry using new Ns_CacheSetValueExpires().

	Ns_CacheFlush() now returns the number of entries flushed.

	New Ns_CacheStats() takes over from ns_cache_stats for non-Tcl
	caches. Stats are returned in Tcl "array get" format.

	Removed Ns_CacheMalloc(), Ns_CacheFree() and Ns_CacheName().

	Move Tcl commands to tclcache.c.

	* nsd/Makefile:
	* nsd/tclcmds.c:
	* nsd/tclcache.c:
	* tests/ns_cache.test: Add new Tcl commands ns_cache_create,
	_eval, _append, _lappend, and _incr. (RFE# 1119257)

	Old commands ns_cache_names, _keys, _flush and _stats now only
	work on Tcl caches.  ns_cache_size has been removed; the size is
	now reported along with other statistics. These commands now only
	work on Tcl caches.

	* tcl/cache.tcl: New ns_memoize and related commands which act
	just like ns_cache_eval but use the script as a key into the
	memoize cache.

2005-12-22  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclrequest.c:
	* tests/ns_register_filter.test:
	* tests/ns_info.test: Fix bug where blank arg was being passed to
	filter and trace procs when no arg was registered.

2005-12-11  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclvar.c: Untabify and reformat.

	* nsd/tclvar.c:
	* tests/ns_nsv.test: Add -nocomplain switch to nsv_unset command
	to match Tcl unset command.

	* tests/ns_nsv.test: Typo: s/-setup/-body/

	* tests/ns_register_filter.test: Add tests for registered filters
	and traces.
	* nsd/tclrequest.c: Fix bug where filter errors were being logged
	twice. Fix bug where filter callback procs were being constructed
	incorrectly, making it impossible to register inline script
	fragments, rather than proc names.

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/filter.c:
	* nsd/tclrequest.c:
	* nsd/proc.c:
	* nsd/tclcmds.c:
	* tests/ns_register_filter.test: Add switch -first to
	ns_register_filter command, allowing filters to be registered at
	the head of the queue.  Add new command ns_shortcut_filter
	which registers a C filter callback which simply returns
	NS_FILTER_BREAK, preventing any other filters of the same type
	from running. For further explanation, see:
	http://sf.net/tracker/index.php?func=detail&aid=1012103&group_id=3152&atid=353152

2005-12-10  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/httptime.c: Untabify and reformat.
	* tests/ns_httptime.test: Add tests for ns_parsehttptime.

	* nsd/httptime.c:
	* tests/hs_httptime.test: Use snprintf to format the date to ensure the
	English week and month names are always used, no matter which
	locale is in effect. (Bug# 1340755)

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/fastpath.c:
	* nsd/tclrequest.c:
	* nsd/tclcmds.c:
	* nsd/server.c:
	* nsd/proc.c:
	* tests/ns_register_proc.test: Add new Tcl command ns_register_fastpath
	which re-register the original fastpath proc for static file serving,
	for the specified method and URL.  This allows e.g. a Tcl proc to
	be registered as the default handler for the URL / and then
	override this with the fastpath proc for /images.  The fastpath
	proc invokes no Tcl and therefore does not allocate an interp.
	Non-Tcl using threads can be segregated using the conn pool
	mechanism.
	(RFE: http://sf.net/tracker/index.php?func=detail&aid=1012770&group_id=3152&atid=353152)

2005-12-05  Stephen Deasey  <sd@groks.org>

	* include/ns.h:
	* nsd/op.c: Add new function Ns_UnRegisterProcEx which
	allows all urlspace flags to be set.
	* nsd/tclrequest.c: Fix bug where noinherit procs were not being
	deleted. Add new -recurse flag to ns_unregister_proc which deletes
	all registered procs below the given URL.
	* tests/ns_register_proc.test: Exercise the ns_register_proc API.

2005-12-03  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/ns_info.test: Add new sub-commands to failing ns_info test.

2005-11-12  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd.info.c: Added ns_info started and
	ns_info shutdownpending commands

2005-11-12  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd.conn.c: New Ns_ConnSockPtr function
	* nsd/info.c: Fixed sockcallbacks as unrecognosed error
	* nssock/nssock.c:
	* include/ns.h: Added new DriverAccept call for drivers
	to be called after accept the connection. If request struct will
	be provided by the driver, connection will be queued immediately and
	driver will handle it completely. This is temporary until more generic
	driver support will be designed.
	* nsd/sock.c: Moved and made as public two functions from sock
	driver: Ns_SockRecvBufs, Ns_SockSendBufs. for new drivers, now it
	will be easy to re-use send/recv data from within driver's proc.

	* nsd/driver.c: Split SockRead into SockRead and SockParse,
	added new Ns_DriverSetRequest function that allocates request
	struct for new connection socket.

2005-11-07  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/info.c: Fixed broken NsTclInfoObjCmd which failed to
	properly process info options not tied to any specific server.

2005-11-06  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/Makefile:
	* nsd/url2file.c:
	* nsd/fastpath.c:
	* nsd/info.c:
	* nsd/init.c:
	* nsd/proc.c:
	* nsd/server.c:
	* nsd/tclcmds.c:
	* nsd/tclfile.c:
	* tests/ns_info.test:
	* tests/url2file.test: Add new, flexible urlspace-based Url2File C
	API and matching Tcl commands. (RFE: 1333811)

2005-11-02  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/binder.c: All Ns_SockListen routines support
	forked binder now if direct socket allocation failed

2005-11-02  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/ns_info.test: added 1 second delay to make ns_info
	uptime report uptime > 0 successfuly

	* configure.in:
	* m4/cmmsg.m4:
	* include/ns.h:
	* nsd/binder.c:
	* nsd/nsmain.c: Added support of binder as a separate process
	forked before switching off root priviliges and provided
	new API function Ns_SockListenBinder for creating
	sockets. In this mode, no need to specify all ports in the command line
	parameter -b. For now all modules have to call new API function in order
	to create sockets if they are not specified using -b command line
	paramater.

2005-10-28  Bernd Eidenschink  <eide@users.sourceforge.net>

	* tcl/compat.tcl: ns_rename now does not delete a file
	if "from" and "to" match.

2005-10-27  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* include/ns.h:
	* nsd/log.c: added Ns_VALog with varargs interface

2005-10-24  Bernd Eidenschink  <eide@users.sf.net>

	* tests/ns_set.test: added basic tests for ns_set command.

2005-10-22  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclcmds.c:
	* nsd/tclenv.c:
	* tests/ns_env.test: Untabify and reformat code, convert to Tcl
	objects.  Fix bugs with -nocomplain switch and unset
	command. (Bug# 1333280)

2005-10-22  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/nsmain.c (Ns_Main): initialize Tcl library in the
	server process only. Fix the broken SIGINT hadling which
	allowed us to CTRL-C the booting process at any time.
	Watchdog wakes up every 10 minutes on all platforms.

	* nsd/modload.c (Ns_ModuleLoad): make the passed file
	path absolute before attempting to load the module.

	* nsd/tclmisc.c: removed plaform testing and added
	platform-neutral testing for some data types.

	* configure.in: added platform neutral testing for
	u_int32_t and u_int8_t types.

2005-10-21  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclcmds.c
	* nsd/tclfile.c: re-born ns_normalizepath as C command
	* tcl/compat.tcl: removed Tcl ns_normalizepath wrapper
	* configure.in: cosmetic change
	* include/Makefile.global.in: link against libnsd library
	when linking new nsdbstest driver
	* nsdbtest/Makefile: add MODNAME of nsdbtest so we can
	do more checks when linking the module
	* m4/tcl.m4: removed "-prebind" for Darwin builds

2005-10-21  Bernd Eidenschink  <eide@users.sf.net>

	* tests/images/: re-added files as binaries.
	* tests/ns_info.test: minor fix for test 2.27.1

2005-10-20  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/modload.c (Ns_ModuleLoad): Although the first two arguments
	to Ns_ModuleLoad are called server and module, they're really just
	two arbitrary strings passed to the module.  The nsdb module for
	examples passes the driver name and configuration path.  For this
	reason we cannot realy on knowing the current virtual server and
	so cannot allocate an interp from the per-thread cache.

	* include/ns.h:
	* nsd/tclobj.c: Generalise the ns_thread routines for wrapping a C
	structs with a Tcl obj handle.  Slighlty enhanced: also allows
	wrapping of statically allocated C structs which always have a direct
	string name -> struct relationship.
	* nsd/tclcmds.c:
	* nsd/tclthread.c: Convert to Tcl objects, remove some duplicated
	code and convert to the new ns:addr Tcl object type interface.
	* tests/ns_thread.test: Exercise the ns_thread command and the
	new ns:addr Tcl object type.

	* nsdbtest/nsdbtest.c: Remove unused function declaration.

	* nsd/tclinit.c (Ns_TclRegisterTrace): Remove debug logging code.

	* nsd/nsd.h:
	* nsd/tclinit.c (Ns_TclTraceCreate): Run CREATE traces as they are
	registered in order to make Tcl	comamnds registered by binary
	module available to the boot script and Tcl module files.
	* nsd/init.tcl: Rename use of depraciated api.
	* nsdb/db.h:
	* nsdb/nsdb.c:
	* nsdb/dbtcl.c: Fix bug where Ns_TclRegisterTrace was being called
	after server startup.
	* tests/test.nscfg:
	* tests/ns_accesslog.test: Add stub tests for the nslog module.

	* Makefile:
	* nsdbtest/Makefile:
	* nsdbtest/nsdbtest.c:
	* tests/test.nscfg:
	* tests/nsdb.test: Implement a simple nsdb driver for testing and
	add the beginnings of some tests.

2005-10-20  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/init.tcl: fixed to be able to load Tcl modules
	* include/ns.h: changed reserved keyword delete so C++
	module scan be compiled

2005-10-20  Bernd Eidenschink  <eide@users.sourceforge.net>

	* tests/ns_conn.test:
	* tests/ns_crypt.test:
	* tests/ns_env.test:
	* tests/ns_gifsize.test:
	* tests/ns_jpegsize.test:
	* tests/ns_httptime.test:
	* tests/ns_info.test:
	* tests/ns_mime.test:
	* tests/ns_sha1.test: various new tests, some to be
	improved over time (especially ns_info)
	* tests/images/: some gif and jpeg files for the
	image tests


2005-10-20  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/callbacks.c: added options to run registered callbacks
	in both FIFO and LIFO fashion. All of the start-type callbacks
	are now executed in FIFO and all stop-type in LIFO.

2005-10-20  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclmisc.c:
	* nsd/uuencode.c:
	* test/ns_uuencode.test: fixed bug that causes nsd to segfault if
	called ns_uuencode with 1 byte string

2005-10-19  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nslog/nslog.c (Ns_ModuleInit): failed to create the log
	file when given the relative path.

2005-10-17  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nslog/nslog.c: missed initialization of logfile descriptor.
	This caused us to close invalid descriptor in LogOpen. As the
	result, the interactive NS mode assumed non-interactive use and
	prematurely exited.

2005-10-17  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/log.c:
	* tests/ns_log.test: Add new sub-command: ns_logctl severity.
	With this you can query and set the status of any of the log
	levels at runtime.  For example, you could log into the control
	port -- ns_logctl severity debug on -- to track down a problem.

	* nslog/nslog.c:
	* nscp/nscp.c:
	* nscgi/nscgi.c:
	* nsdb/dbinit.c: Use new config routines.

2005-10-15  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/config.c: Log the section, key, value and any default, min
	or max whenever a configuration value is looked up.  Log at level
	Debug which by default is off. Can now quickly determine which config
	keys are valid/used.
	* nsd/nsmain.c:
	* nsd/nsconf.c:
	* nsd/log.c: Initialise log system earlier -- dissable Dev and
	Debug log levels during early boot up.
	* nsd/driver.c:
	* nsd/nsd.h: Some logging cleanup.

	* Makefile:
	* acinclude.m4:
	* m4/dns.m4: Drop acinclude.m4 and move dns checking macros into
	own file in m4 directory.
	* configure.in:
	* nsd/dns.c: Use built-in AC_CHECK_MEMBERS macro.

2005-10-15  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/tclfile.c (UnspliceChannel): disable any potential
	ready-to-fire events in the threads event queue which
	reference to-be-unspliced channel.
	Reformatted, untabified, beautified, commented, ...ed :-)

	* acinclude.m4: removed m4 checking for structure members

	* configure.in: added checking for sin_len in sockaddr_in

	* nsd/dns.c: added checking for HAVE_MTSAFE_DNS and add
	protective locks if not (Darwin).
	Added checking for HAVE_SOCKADDRIN_SIN_LEN because Darwin
	version of getnameinfo fails if sin_len has unsane values.
	Fixed bug while processing results of gethostbyname.

	* include/nsthread.h: added definition of MIN/MAX macros
	since Solaris does not define them in usual place (sys/param.h)

2005-10-11  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/nsmain.c (StartWatchedServer): clear signal handlers
	before re-starting the server.

2005-10-10  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nsd/adprequest.c Removed OS/FS fallbacks. Now use TclVFS
	* nsd/adpeval.c    wrappers always. This simplifies code
	* nsd/fastpath.c   and (hopefully) does not introduce any
	* nsd/urlopen.c    (perceivable) speed penalties.

2005-10-09  Stephen Deasey  <sdeasey@users.sf.net>

	* Makefile:
	* autogen.sh: New script to run the various autotools to generate
	the build system.
	* missing: Add this default automake helper script.
	* configure.in: Initialise automake, even though we don't use it,
	so that we can use aclocal to manage our m4 scripts.
	* aclocal.m4:
	* acinclude.m4: Contents of aclocal.m4 now moved to acinclude.m4.
	aclocal.m4 is now autogenerated by the aclocal tool, called from
	within autogen.
	* configure:
	* include/nsconfig.h.in: Remove autogenerated scripts from cvs.
	New strategy is to call autogen.sh on first checkout to intialise
	the build environment.
	* tcl.m4:
	* m4/tcl.m4: Move into m4 subdirectory.  Upgrade to revision 1.74
	from Tcl cvs.  Fully quote macro names (needs to go upstream).
	* .cvsignore:
	* include/.cvsignore: Ignore some new autogenerated build scripts,
	and some old ones we no longer keep in cvs.

	* nsd/nsd.h:
	* nsd/modload.c:
	* nsd/nsmain.c:
	* nsd/server.c:
	* nsd/init.tcl: Add new Tcl command ns_moduleload which loads a
	binary module into the server and calls it's initialising
	function.  Remove NsLoadModules and instead call ns_moduleload
	from the init.tcl bootstrap.  Policy about where modules are
	located and when they are loaded is now easily accessible to Tcl.
	(RFE# 1244177)
	* nsd/tclcallbacks.c:
	* nsd/tclmisc.c:
	* nsd/tclcmds.c: Add new command ns_atprestartup as a simple
	wrapper for the C equivalent.  Add new command ns_runonce which
	ensures that the given script is run only once, either globally or
	per virtual server, during the lifetime of the server process.
	This simplifies initialisation.

	* include/ns.h:
	* include/nsthread.h: MIN and MAX are defined after all, in
	sys/param.h. Include this header.
	* nsd/modload.c: Don't delete interp, de-allocate.

2005-10-08  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/rollfile.c (Ns_PurgeFiles): Quiet compiler complaints about
	an uninitialised variable, which was fine.  Add missing error
	return statement.
	* nsd/tclimg.c (NsTclGifSizeObjCmd): Clarify signedness of
	character comparisons to quiten compiler.

	* nsd/modload.c (Ns_ModuleLoad): Quiet compiler complaints about
	pointer aliasing.  Allocate interp from per-thread cache.

	* include/ns.h:
	* nsd/config.c:
	* nsd/driver.c: Add definition of MIN and MAX macros used by
	fastpath.c if not already defined, which aren't standard on
	e.g. Linux.  Convert config.c and driver.c to use this common
	definition.

	* include/.cvsignore: Ignore generated nsconfig.h.

2005-10-08  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* configure.in: emit warning for Darwin builds about
	MT-unsafeness of DNS calls (getnameinfo, getaddrinfo).

	* configure: regenerated

	* nsd/dns.c: added critical sections in GetHost/GetAddr
	when using getnameinfo/getaddrinfo on Darwin platforms.
	Also, in GetHost(), explicitly initialize the struct
	sockaddr_in sin_len element because this is needed for
	the Darwin getnameinfo implementation.

	* tests/ns_hostbyaddr.test: resolving 0.0.0.0 on Darwin
	always succeeds, hence this test is constrainted on
	"nonDarwin".

	* include/ns.h:       Use (where possible) Tcl wrappers when
	* include/nscheck.h:  accessing files on the filesystem.
	* nsd/adpeval.c:      Exceptions are: temp files and logs.
	* nsd/adprequest.c:   Special cases are in fastpath.c, adpeval.c,
	* nsd/binder.c:       adprequest.c and urlopen.c where the native
	* nsd/config.c:       call is performed first, and if failed, the
	* nsd/conn.c:         Tcl companion is tried next. This way the
	* nsd/driver.c:       simple but effective VFS fallback is assured.
	* nsd/fastpath.c:
	* nsd/init.c:         Status before those changes is tagged as
	* nsd/log.c:          "before-tclvfs" in order to simplify backoff
	* nsd/modload.c:      if needed.
	* nsd/nsconf.c:
	* nsd/nsmain.c:	      (RFE# 1202462
	* nsd/pidfile.c:
	* nsd/rollfile.c:
	* nsd/tclcmds.c:
	* nsd/tclfile.c:
	* nsd/tclimg.c:
	* nsd/urlopen.c:
	* tcl/compat.tcl:
	* tests/http_byteranges.test:

	* nsd/nsmain.c: added alarm of 300 seconds for the watchdog
	on Darwin. When the alarm triggers, the watchdog re-checks
	the existence of the server process (by sending kill 0) and
	clears nsconf-pid value if the process is gone. This is the
	signal to re-start the server again. All this mess is needed
	because under some strange circumstances, the WaitForServer()
	never returns, although the server process is already gone.
	This smells of a broken signal delivery to me...

2005-10-05  Zoran Vasiljevic <vasiljevic@users.sourceforge.net>

	* nslog/nslog.c: untabified, reformatted, improved comments.
	LogObjCmd: rewritten with Tcl_Obj interface and using TclVFS
	wrappers for handling files. Proper locking when accessing the
	Log structure elements in the LogObjCmd.

	* nsd/dns.c: fixed typo in GetAddr when using the gethostbyname
	path. This is very needed for Apple Mac OSX since the other
	getnameinfo/getaddrinfo calls does not seem to work correctly
	and are also mt-unsafe, so it is a loose-loose situation.

2005-10-02  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/log.c:
	* nsd/nsd.h: Remove NsParam* wrapper macros. Directly using
	Ns_Config* is clearer (and grep-able).
	* nsd/server.c:
	* nsd/nsconf.c:
	* nsd/queue.c: Use new Ns_Config* routines which handle defaults
	and range checking.  Note: config file values which are less than
	the lower bound of a range are rounded up and not converted to the
	default value, as before.
	* nsd/driver.c: Some config defaults have changed.
	* nsd/nsconf.h: Removed.  Incroporated default values directly
	into code.

	* nsd/adpeval.c:
	* nsd/adprequest.c:
	* nsd/connio.c:
	* nsd/encoding.c:
	* nsd/fastpath.c:
	* nsd/form.c:
	* nsd/mimetypes.c:
	* nsd/op.c:
	* nsd/request.c:
	* nsd/return.c:
	* nsd/rollfile.c:
	* nsd/str.c:
	* nsd/tclrequest.c:
	* nsd/unix.c:
	* nsd/nswin32.c:
	* nsd/url.c:
	* nsd/urlspace.c:
	* nsd/nsd.h:
	* include/ns.h: Untabify, reformat, add CONST declarations and
	GNUC attributes.

2005-10-01  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/adprequest.c:
	* nsd/op.c:
	* nsd/return.c:
	* nsd/urlspace: Untabify and reformat.

	* .cvsignore:
	* include/.cvsignore:
	* nsd/.cvsignore:
	* nsthread/.cvsignore: Tell cvs about files which it should ignore.

2005-08-18  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/dns.c: Don't log host/address not found error
	messages. These aren't really errors.

	* nsd/fastpath.c:
	* nsd/nsmain.c:
	* nsd/pathname.c:
	* nsd/str.c: Make sure ctype functions are always passed an
	unsigned char.

	* include/ns.h:
	* nsd/str.c (Ns_StrToInt): Convenience function for parsing
	integers.  atoi is not always threadsafe (e.g. Darwin) and
	makes it impossible to handle errors, strtol makes it difficult.

	* include/ns.h:
	* nsd/str.c: Untabify and add attributes.

2005-08-04  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/log.c:
	nsd.nsd.h: Finished log localization by removing usage of the
        global nsconf.log structure.

	include/ns.h:
	nsd/set.c:
	nsd/tclset.c: Added Ns_SetGetValue|Ns_SetIGetValue wrappers which
	handle defaults

2005-08-03  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsd.h:
	* nsd/nsconf.h:
	* nsd/nsconf.c:
	* nsd/log.c: Use efficient table lookups to convert from severity
	strings to severity levels and back again. Localize global log
	configuration into log.c.
	* tests/ns_log.test: Add some simple tests for the ns_log and
	ns_logctl commands.
	* tests/all.tcl: tcltest does not actually get confused by log
	messages...

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/config.c: Add config value wrappers which handle defaults
	and in the case of integer values, range checking.

2005-08-01  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/driver.c: Log a warning when no drivers are configured to
	listen (BUG #1231853).  Driver errors during startup continue to
	be a non-fatal error.

	* include/ns.h:
	* nsd/log.c: Make Tcl send panic messages to the server log. Add
	some CONST declarations and GCC attributes.
	* nsd/unix.c: Call Tcl Panic directly from fatal signal
	handler. Remove unneeded call to pthread_kill_other_threads_np.

	* include/ns.h:
	* nsd/dsprintf.c:
	* nsd/dstring.c: Untabify, reformat and add CONST declarations.

	* nsd/log.c: Untabify, reformat and touch up comments.

2005-08-01  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h: fixed bug preventing sockcallbacks to
	be used, NS_SOCK_ANY should be 0xff otherwise callback is
	removed from the queue.

	* include/ns.h:
	* nsd/nsd.h:
	* nsd.queue.c:
	* nsd.return.c:
	* nsd/conn.c: added ns_conn responseversion to manually set response
	protocol and version to have full control about returned HTTP format.
	For C API 2 functiosn are added: Ns_ConnResponseVersion and
	Ns_ConnSetResponseVersion. Added responseVersion char* pointer to
	Conn structure. To enable response version tests ns_httptest needs
	to be changed to return response protocol/version.

	* nsd/adprequest.c:
	* tests/http_chunked.test:
	* tests/testserver/pages/http_chunked.adp: detects now whether client
	is HTTP/1.1 and therefore handles chunked encoding.

2005-07-30  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h: Untabify and reformat some definitions. Remove
	unused/unneeded NS_AOLSERVER_3_PLUS, NS_SHUTDOWN and
	NS_REGISTER_SERVER_TRACE.

2005-07-29  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:

	* nslog/nslog.c: Fix use of ex-compat macro Ns_ConfigGet.

	* include/nsthread.h:
	* nsthread/memory.c: Ensure callers of ns_realloc check the
	rerturn value.  Use ckalloc etc. macros consistently for
	debugging.

	* include/ns.h:
	* include/nsthread.h:
	* nsd/tclthread.c:
	* nsd/tclfile.c:
	* nsthread/Makefile:
	* nsthread/compat:
	* nscgi/nscgi.c: Remove a bunch of truly ancient compatibility
	macros and functions.

	* nsd/tclinit.c:
	* nsd/tclcmds.c:
	* nsd/init.tcl: Remove ns_markfordelete command and roll into
	ns_ictl as ns_ictl markfordelete.

	* nsd/nsd.h:
	* nsd/nsmain.c:
	* nsd/tclinit.c: Allocate interps efficiently, max 1 per-thread
	per-server. (RFE #1241351)

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/server.c:
	* nsd/tclinit.c:
	* nsd/tclmisc.c: Add Ns_TclLogErrorInfo and allow admin to
	configure which conenction headers to log for Tcl
	errors. (RFE #1241432)

2005-07-22  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/modload.c: Untabify and reformat.  Add CONST declarations.

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/config.c: Untabify and reformat.  Add CONST declarations.

2005-07-21  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/ns_adp_chunked.test:
	* tests/http_chunked.test: Rename tests which handle both Tcl and
	ADP.  Add some more tests which highlight a few bugs.

	* tests/testserver/pages/ns_adp_chunked.tcl:
	* tests/testserver/pages/http_chunked.adp: Rename file.  Handle
	streaming and non-streaming situations, and actually write out the
	data in two goes.  Add a workaround for a bug in the ns_conn
	chunked switch: detect whether client is HTTP/1.1 and therefore
	handles chunked encoding.  This needs to disappear altogether.

	* tests/testserver/pages/ns_tcl_chunked.tcl: Incorporate code
	directly into test file using ns_register_proc.

2005-07-19  Stephen Deasey  <sdeasey@users.sf.net>

	* Makefile: Add gdbruntest target to run a naviserver command
	shell under gdb.

2005-07-11  Vlad Seryakov  <seryakov@users.sf.net>

	* NEWS: Updated latest features and changes

	* nsd/driver.c:
	* nsd/nsd.h: Added support for spooling large uploaded
	content into temporary file. Configuration oprion maxsize
	controls when to use temp file or memory buffer.

	* include/ns.h:	 Added definition of Ns_ConnSend.

2005-07-12  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsd.h:
	* nsd/proc.c:
	* nsd/server.c:
	* nsd/adprequest.c:
	* nsd/tclrequest.c: Fix the confusion around the default adp
	request handler and ns_register_adp and add the missing proc
	callback info.  ns_info requestprocs now gets things
	right. ns_register_adp will also now register the default adp
	request handler if you don't specify an optional file to map.

	* include/ns.h:
	* nsd/Makefile:
	* nsd/tclmisc.c:
	* nsd/tclobj.c:
	* nsd/tcltime.c: Consolidate Tcl time functions and object type
	into one place.

2005-07-11  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/nsmain.c:
	* nsd/queue.c:
	* nsd/tclcmds.c:
	* nsd/proc.c:
	* nsd/tclinit.c: Add generalised interp tracing mechanism which
	replaces Ns_TclInitInterps, Ns_TclRegisterDeferred
	etc. Restructured code for clarity.

	* nsd/tclset.c:
	* nsd/tclshare.c:
	* nsd/tclthread.c:
	* nsd/adprequest.c: s/NsGetInterp/NsGetInterpData/g

	* nsd/Makefile:
	* nsd/connio.c:
	* nsd/tclatclose.c: Moved at-close traces into tclinit.c.

	* nsd/tclmisc.c: Move Ns_TclPrintfResult into misc.

	* nsdb/db.h:
	* nsdb/nsdb.h:
	* nslog/nslog.c:
	* nsperm/nsperm.c: Remove usage of deprecated functions.

2005-07-11  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/ns_adp_chunked.test:
	* tests/servers/server1/pages/ns_tcl_chunked.tcl:
	* tests/servers/server1/pages/ns_adp_chunked.adp:
	* tests/testserver/pages/ns_adp_chunked.adp: Added tests for chunked
	encoding from adp files

	* include/ns.h:
	* nsd/fastpath.c:
	* nsd/return.c:
	* nsd/connio.c: Refactored chunked support to use Ns_connClose
	to send the last zero chunk. This makes chunked support universal and
	can be used in adp as well.

2005-07-08  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/fastpath.c:
	* nsd/return.c:
	* nsd/connio.c:
	* nsd/conn.c: Added support for chunked encoding using conn flag
	NS_CONN_CHUNKED. Once set, output routines (Ns_ConnReturnOpenFd|File|Channel and
        Ns_ReturnData) will perform chunked encoding automatically instead of
        raw data output. From Tcl ns_conn chunked command is available and
	if called with third parameter 0 or 1 can set/unset conn flag.

2005-07-08  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/nsd.h:
	* nsd/fastpath.c:
	* tests/http_byteranges.test: Implemented full byte ranges
	support including If-Range and multiple ranges. Supports
	mmap and return from fd modes.

	* nsd/fastpath.c:
        * tests/http_byteranges.test: Updated to return correct
        Content-length header.

	* include/ns.h:
	* nsd/fastpath.c:
	* nsd/connio.c: Introducing NS_CONN_MAXBUFS parameters which is set
	to 16 by default. It defines how many iov buffers Ns_ConnSend can to use
	simultaneously and max number of ranges nsd supports which is
	NS_CONN_MAXBUFS/3

2005-07-06  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclinit.c:
	* nsthread/tls.c: Moved call to Tcl_FinalizeThread to end of TLS
	cleanup to better catch any cases of Tcl being used outside
	expected interfaces.

	* nsd/tclcmds.c: Alphabetize list of Tcl commands.

	* nsd/return.c: Clean up some string buffer usage.

	* include/ns.h:
	* nsd/driver.c:
	* nsd/binder.c: Add backlog arg to Ns_SockListenUnix().

	* nsd/binder.c:
	* nsd/driver.c: Localize Windows ifdefs as much as possible.

	* nsd/connio.c:
	* nsd/queue.c:
	* nsd/return.c:
	* nsd/driver.c:
	* nsd/server.c:
	* nsd/nsd.h:
	* nsd/nsconf.c:
	* nsd/nsconf.h: Cleanup default configuration by removing unneeded
	values and actually using the defaults throughout the code where
	appropriate.  Some per-server limits have been made per-driver.

2005-07-05  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/fastpath.c:
	* tests/http_byteranges.test:
	* NEWS: Add back preliminary support for HTTP range requests.

	* configure.in:
	* configure: Update version to 4.99.1 and regenerate configure
	script.

	* TAG naviserver-4.99.0-release.

	* Makefile: Add DOAP file to list of files to be included in
	release tarball.

	* nsd/fastpath.c:
	* tests/http_byteranges.test: Temporarily remove in-progress
	support for HTTP Range requests.

	* NEWS: Add release date and remove reference to byte ranges.
	Mention new Ns_ConnPrintfHeaders() function.

	* include/nscheck.h: Microsoft's feeble compiler can't handle
	macro varargs.  New usage is: NS_GNUC_NONNULL((x, y, z)).

	* naviserver.rdf: Add license and category information to DOAP
	file and fix default namespace so it validates.

2005-06-30  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/cookies.c (GetConn): No longer check whether the response
	headers have already been sent for Tcl commands. The check was broken
	and not useful.

2005-06-30  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c: fixed Bug #1230179 which caused the server crash
	when calling ns_startcontent outside of the connection scope.

2005-06-29  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/fastpath.c: Made all tests pass successfully. Changed parser
	to support multiple ranges. ParseRange returns list of all parsed ranges
	but FastReturn uses only the first one. to return mutiple chunks
	FastReturn should be changed.

2005-06-29  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/http_byteranges.test: Use the 'knownBug' test contraint to
	dissable multiple-range tests so that they are counted in the 'Skipped'
	column of the test results and are not forgottena about. Added a new,
	temporary test for multiple ranges to ensure that multiple-range
	requests are ignored, not half fulfilled.  Re-added test 2.3 which
	tests multiple, overlapping ranges (non canonical in RFC speak);
	dissabled as a 'knownBug'.  Reverted tests 3.1 and 3.2 which check
	syntactically invalid requests are ignored by the server.  An end
	byte before the start byte is never going to work and so is a
	syntactic error, not an unsatisfiable request.  Renamed tests
	byteranges- from http-.

2005-06-29  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/http_byteranges.test: Disabled mutiple ranges
	test. This can be supported in the future.

2005-06-28  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/http_byteranges.test: Updated to reflect
	actual range support. Multiple ranges are not supported.

	* nsd/fastpath.c: improved detection of invalid syntax

	* ns/include:
	 nsd/return.c: removed unsed NsConnPrintfHeader. Renamed
	 Ns_ConnVSetHeaders into Ns_ConnPrintfHeaders.


2005-06-28  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/http_byteranges.test: Test HTTP byte ranges.

2005-06-28  Vlad Seryakov  <seryakov@users.sf.net>

	* include/ns.h:
	* nsd/return.c: Added Ns_ConnVSetHeaders function to add
        headers to the output in printf-style way.

	* nsd/fastpath.c: Added support for Range: headers in the
	requests to return partial content

2005-06-27  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/nsmain.c: improved clarity of code handling nsconf.home
	path rewriting for Windows platform.

	* nsd/tclcmds.c:
	* nsd/nswin32.c: removed NsTclFailServiceObjCmd() and tied the
	processing to the NS_SIGINT signal as sent by the -restart
	option of the "ns_shutdown" command, hence avoiding different
	ways to force server restarts on different platforms.
	Removed experimental ReportException() call since it does
	not really seem to prevent the default handling in Windows where
	a Window pops up and the user has to confirm. Such behaviour
	prevents the service control manager to restart the service.

	* nsd/return.c: removed unneeded Ns_ConnReturnPath() added by
	latest Win changes. The Ns_ConnReturnFile() should be used instead.

	* include/nscheck.h: define __GNUC_PREREQ to false if
	not using GCC compiler. This will automatically disable
	all GCC-related optimizations.

2005-06-27  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclcmds.c: #ifdef-ed NsTclFailServiceObjCmd with WIN32 to
	allow nsd to be compiled on Unix again.

2005-06-24  Ibrahim Tannir  <itannir@users.sf.net>

	* include/nscheck.h: VC for Windows cannot handle GNU preprocessor
	directives and macros (fixed).

	* nsd/driver.c:
	* nsd/binder.c: Excluded Unix calls from Windows code since some
	of the structs needed to compile them are missing in Windows.

	* nsd/dns.c: Added missing header for Windows.
	* nsd/nsmain.c: Corrected normalizing the home path on Windows.
	* nsd/nswin32.c: Added provisions to fake that nsd as a service
	failed on Windows in order for the Service Control Manager to
	restart it automatically.
	* nsd/return.c: Added Ns_ConnReturnPath to open a file and send
	its contents via the connection.
	* nsd/tclcmds.c: Added the ns_failservice command which affects
	Windows only (see also changes in nswin32.c).

	* nsthread/compat.c:  Added NS_EXPORTS so that the Windows DLL
	can get loaded.

	* win32/cgitest/main.c: Removed superflous CRs at end of lines.

	* main.dsp:
	* nscgi.dsp:
	* nscp.dsp:
	* nsd.dsp:
	* nsdb.dsp:
	* nslog.dsp:
	* nsperm.dsp:
	* nssock.dsp:
	* nsthread.dsp: Changed projects to compile for and link with
	mutithreading & debug enabled libs (MTd instead of MDd).

	* main.vcproj:
	* nscgi.vcproj:
	* nscp.vcproj:
	* nsd.vcproj:
	* nsdb.vcproj:
	* nslog.vcproj:
	* nsperm.vcproj:
	* nssock.vcproj:
	* nsthread.vcproj: New files, VS7 projects for Windows.

2005-06-18  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/connio.c: Fixed bad return code for Ns_ConnReadLine as per
        AOLServer bug report from the mailing list

	* sample-config.tcl: added maxline parameter for nssock section

	* nsd/driver.c:
	* nsd.nsd.h: added maxline parameter to driver section, checks
	for line size limit in the request, defaults to 4k.

2005-06-17  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/harness.tcl:
	* tests/ns_urlencode.test: Use Tcl style tests and remove old harness.

2005-06-17  Vlad Seryakov  <seryakov@users.sf.net>

	* sample-config.tcl: added maxinput and bufsize parameters
	for nssock section

2005-06-16  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/driver.c
	* nsd/server.c
	* nsd/nsd.h: Removed maxpost config option (RFE #1222107)

2005-06-14  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/binder.c: added missing listen call to Ns_SockListenUnix
	function.

2005-06-14  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/adpeval.c: Reformat to NaviServer coding style
	(no functional changes)

2005-06-13  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/compress.c: Fixed Ns_CompressGzip() declaration
	when --without-zlib is used during compilation
	(first arg was lacking the "const" qualifier).

	* nsd/nswin32: Added (untested) implementation of
	NsMemMap() and NsMemUmap() calls.

2005-06-12  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/adpparse.c:
	* nsd/compress.c:
	* nsd/listen.c:
	* nsd/sock.c:
	* nsd/tclimg.c:
	* nsd/tclmisc.c:
	* nsd/tclresp.c:
	* nsd/uuencode.c:
	* nscp/nscp.c:
	* tests/tclresp.test: Fix some issues with mixing signed/unsigned
	data that gcc4 was complaining about and a couple of instances of
	uninitialised variables.

	* nsd/tclobjv.c: Simplify code and clarify comment.

	* nscgi/nscgi.c: Use non-depreciated functions.

	* nsd/str.c: Add new function Ns_StrIsHost.
	* include/ns.h:
	* nsd/nsd.h:
	* nsd/driver.c: Save the protocol seperate from the location in
	the driver structure and ensure the location always begins with a
	"protocol://" string.
	* nsd/server.c:
	* nsd/conn.c:
	* nsd/pathname.c: Simplify code by using protocol direct from
	driver structure and checking Host header with Ns_StrIsHost.

	* nsd/tclsock.c: Removed unused static function.

2005-06-12  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c:
	* nsd/info.c:
	* nsd/log.c:
	* nsd/queue.c:
	* nsd/tclfile.c:
	* nsd/tclhttp.c:
	* nsd/tclinit.c:
	* nsd/tcljob.c:
	* nsd/tclmisc.c:
	* nsd/tclthread.c
	* nsd/tclvar.c:
	* nsthread/nsthreadtest.c: silencecompiler warnings like
	"dereferencing type-punned pointer will break strict-aliasing rules"

2005-06-11  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/return.c: made warning go away about parentheses around && and ||

2005-06-11  Stephen Deasey  <sdeasey@users.sf.net>

	* include/nscheck: Add new attribute NS_GNUC_SENTINEL which
	ensures that a NULL is passed as the last arg to a varargs
	function.  Also, make sure that the format arg in a printf-like
	function is non-NULL.
	* include/ns.h: Markup up with NS_GNUC_SENTINEL.
	* nsd/urlspace.c:
	* nsd/nslog.c: Say NULL rather than 0 when talking about null pointers.

2005-06-11  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/exec.c:     Fixed various places where log calls
	* nsd/nsmain.c:   were fed with wrong number or wrong
	* nsd/driver.c:   types of arguments.

	* nsd/nsd.h:      Added wrappers for mem-mapping files in
	* nsd/fastpath.c: platform-neutral way. Only the unix part
	* nsd/unix.c:     is implemented. The Windows part is still
	* nsd/nswin32.c:  left to be done.

2005-06-10  Vlad Seryakov  <seryakov@users.sf.net>

        * nsd/driver.c:
        * nsd/binder.c: Determine path using Ns_PathIsAbsolute for Unix
	domain sockets

	* nsd/tclresp.c: removed ns_returnbinary command. Added -binary
	flag to ns_return.

2005-06-10  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* include/ns.h Ns_SockBindUdp(), Ns_SockBindRaw() and Ns_SockBindUnix()
	are now exported.

	* nsd/init.c: NsInitBinder is also done for Windows as for Unix.

	* nsd/binder.c: Attempt to unify usage and call-conventions on various
	Ns_SockListenXXX and Ns_SockBindXXX calls for various protocols
	(tcp, udp, raw, unix).
	Also, parts not needed for windows build (pre-binding) are ifdef'ed out.
	Still open: handling of Unix-domain sockets on Windows. It might compile
	but will definitely not work because of the address parsing issues
	(windows files do not begin with slash). This has to be sorted out.

2005-06-10  Vlad Seryakov  <seryakov@users.sf.net>

	* tests/tclresp.test: updated to reflect parameters change
	for ns_respond, new -binary flag

	* nsd/binder.c: make Ns_SockListenUnix to use prebound
	sockets if available.

2005-06-10  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/nswin32.c: Cosmetic changes (reformatted, untabified).
	Added NsRestoreSignals as no-op to make symetrical to Unix counterpart
	and avoid excessive ifdefs for Windows.
	Replaced GNU poll implementation.

	* nsd/unix.c: Cosmetic changes (reformatted, untabified).

2005-06-10  Stephen Deasey  <sdeasey@users.sf.net>

	* configure.in:
	* include/config.h.in:
	* include/nsthread.h:
	* include/nsconfig.h.in: Rename config.h nsconfig.h to prevent
	clashes wth module/library config.h files.
	* configure: Rebuild configure.

	* include/ns.h:
	* include/nsthread.h:
	* nsd/conn.c:
	* nsd/nsd.h:
	* nsd/pathname.c:
	* nsd/rollfile.c:
	* nsd/server.c:
	* nsd/set.c:
	* nsd/tclinit.c:
	* nsd/tcljob.c:
	* nsd/tclsock.c:
	* nslog/nslog.c:
	* nsthread/mutex.c: Use CONST declarations to silence compiler.

	* include/ns.h:
	* include/nsthread.h: Add a variety of NS_GNUC_* annotations.

	* *.c: Use NS_RCSD() macro to quieten compiler.

	* NEWS: Add latest news and remove news which belongs to other modules.

	* include/Makefile.global.in: Enable Tcl CONST checking.
	* include/nsthread.h:
	* include/nscheck.h: Add support for extra GCC checks. (RFE #1215725)

2005-06-09  Stephen Deasey  <sdeasey@users.sf.net>

	* include/Makefile.global.in: Remove TCL_DEFS which isn't needed
	now that autoheader is used.
	* configure.in: Add call to TEA_TIME_HANDLER for time defs.
	* configure:
	* include/config.h.in: Rebuild configure and config.h.

2005-06-09  Vlad Seryakov  <seryakov@users.sf.net>

	* include/Makefile.global.in: added missing TCL_DEFS
	in CFLAGS

2005-06-08  Vlad Seryakov  <seryakov@users.sf.net>

        * sample-config.tcl: added example of dynamic virtual hosting

        * include/ns.h:
	* nsd/tclobjv.c: added Ns_ObjvByteArray function to
        accept binary arrays as input parameters.

	* nsd/tclcmds.c:
	* nsd/tclresp.c: added ns_returnbinary command to be able
	to return possibly binary data to the connection. Currently
	ns_return family support this from files or open fds only.
        Added -binary flag to ns_respond to return binary data without
        encoding conversion.

2005-06-08  Stephen Deasey  <sdeasey@users.sf.net>

	* Makefile: Make sure derived files don't end up in the tarball.

	* Makefile:
	* NEWS: Add latest news.

2005-06-04  Stephen Deasey  <sdeasey@users.sf.net>

	* configure:
	* configure.in:
	* include/Makefile.global.in:
	* Makefile: Add 'dist' Makefile target.  Rebuild configure.

	* configure:
	* configure.in:
	* include/config.h.in:
	* include/ns.h: Move definition of version information from main
	header into configure script.  Rebuild configure.

	* Makefile: Also remove include/config.h on distclean.

	* configure:
	* configure.in:
	* include/nsthread.h:
	* include/Makefile.global.in:
	* include/config.h.in: Update configure.in to use an autoheader
	generated config.h.in.  Rebuild configure.

	* configure:
	* tcl.m4: Update to revision 1.64 of tcl.m4 from Tcl cvs which
	adds AC_DEFINE descriptions for use with autoheader.  Rebuild
	configure.

2005-05-21  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/driver.c: fixed coredump in NsStartDrivers() if the driver
	does not have the bindaddr defined (i.e. it is NULL).

2005-05-20  Vlad Seryakov  <seryakov@users.sf.net>

	* ns/include.h:
	* nsd/driver.c: added support for UDP and Unix domain sockets
	for HTTP over udp/unix sockets. Removed obsolete driver functions.

2005-05-16  Stephen Deasey  <sdeasey@users.sf.net>

	* aclocal.m4:
	* tcl.m4
	* configure.in:
	* configure:
	* include/Makefile.global.in:
	* include/Makefile.module.in: Include tc.m4 macros and convert to
	Tcl TEA build system.  Add messages to all autoconf feature
	tests.  Remove unneeded feature tests.  Rebuild configure script using
	autoconf 2.59.

2005-05-15  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/info.c:
	* nsd/nsmain.c:
	* nscp/nscp.c: Remove redundant Ns_InfoLabel(). Use Ns_InfoTag() instead.

	* include/ns.h: Bump version to 4.99.0 alpha.

	* include/ns.h:
	* nscp/nscp.c:
	* nsd/adpeval.c:
	* nsd/conn.c:
	* nsd/driver.c:
	* nsd/info.c:
	* nsd/init.tcl:
	* nsd/sock.c:
	* nsd/tclinit.c:
	* nsd/tcljob.c:
	* nsd/tclmisc.c:
	* nsd/tclset.c:
	* nsd/urlopen.c:
	* nsthread/nsthreadtest.c: Silence some compiler warnings.

	* nsd/tcljob.c:
	* nsd/tclobjv.c:
	* nsd/tclxkeylist.c:
	* nsd/unix.c: Hide global symbols which shouldn't be exported.

	* Makefile: Add new "checkexports" target which prints out a list
	of global symbols which shouldn't be.

2005-05-14  Stephen Deasey  <sdeasey@users.sf.net>

	* tcl/nsdb.tcl:
	* nsdb/util.tcl:
	* nsdb/Makefile: Move nsdb module's Tcl file into module directory
	and add to module shared Tcl install target.

	* nsperm/Makefile: Use new TCL variable to install shared Tcl
	files.

	* include/Makefile.module.in: Add new MODNAME and TCL Makefile
	variables which modules can use to specify a list of shared tcl
	files to install.

2005-05-13  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/init.tcl (_ns_sourcemodule): Module's shared tcl directory
	was incorrectly set to private directory.

2005-05-11  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/urlencode.c: added URLDECODE_RELAXED (undefined per default)
	to be able to adjust url decoding to replace '+' to ' ', thus being
	more forgiving to urls encoded with (broken) AOLserver urlencoder.

2005-05-04  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/unix.c: modified poll() wrapper to work on Darwin 6.x
	in addition to 7.x and 8.x versions. Also, heavily reformatted
	poll() wrapper to be easily readable.

	* nsd/tclmisc.c: conditionally define u_int32_t and u_int8_t
	on Darwin since it has the definition already.

2005-04-30  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsmain.c: Don't assign chroot directory as default server
	name.  Simplify option parsing error messages.

2005-04-27  Vlad Seryakov  <seryakov@users.sf.net>

	nsd/tclmisc.c: updated ns_uudecode to return possibly binary decoded data
	in the Tcl_Obj result instead of string result

2005-04-26  Stephen Deasey  <sdeasey@users.sf.net>

	* include/nsdb.h:
	* nsdb/nsdb.h:
	* nsdb/Makefile: Move nsdb public header file into module directory.

	* include/nsextmsg.h:
	* include/nspd.h: Move stray headers into external modules.

	* include/Makefile.module.in:
	* include/Makefile.global.in:
	* Makefile: Add new module variable LIBHDRS which is the list of
	headers which should be installed for other modules to link
	against (e.g. nsdb.h).

	* include/Makefile.module.in:
	* include/Makefile.global.in: Reindent code for consistency prior
	to making changes.

	* tests/testserver/pages/ns_adp_compress.adp: Add missing file for
	gzip compression tests.

	* tests/testserver/modules/vhost.tcl: Add supporting procs for
	virtual hosting tests.

	* nsd/tclresp.c: Cleanup and reformat code.  Clarify comments.

	* tests/ns_conn_host.test:
	* tests/ns_pagepath.test:
	* ns_serverpath.test: Convert to new nstest_http command and the
	use seperate virtual hosts for tests.

	* tests/http.test:
	* ns_adp_compress.test:
	* tclresp.test: Convert	to new nstest_http command for testing
	http responses.

	* tests/test.nscfg: Create seperate virtual servers for virtual
	host tests and custom serverroot and conn host tests.

	* tests/testserver/pages/10bytes: Add missing 10bytes file for
	tclresp.test.

	* tests/testserver/modules/http.tcl:
	* tests/testserver/modules/testhttp.tcl: Rename http.tcl
	testhttp.tcl so that it doesn't overide the standard tcl/http.tcl
	file.  Command now correctly only sets default headers once so
	that e.g. the Host header can be overridden. Retrieve host and
	port to connect to from config file.


2005-04-26  Vlad Seryakov  <seryakov@users.sf.net>

	* tcl/file.tcl: added support for caching tcl bytecode if
	ns_cache module is loaded, it is used to be in tclcache.tcl
	file which is missing in NS

2005-04-21  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/httptime.c: fixed usage of non-mt-safe timegm()
	by adding a protective lock (Bug#  1187635).

2005-04-17  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c: removed "ns_conn flush" option added
	recently since not needed. The trick is done with
	the "ns_headers" command.

2005-04-18  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsd.h:
	* nsd/tclcmds.c:
	* nsd/tclresp.c:
	* tests/tclresp.test: Remove support for connid parameter to tcl
	response commands. (RFE #1156107)

	* nsd/conn.c:
	* tests/ns_conn_host.test: Prevent truncation of content already in
	dstring when location is appended.  Use nstest_http in tests.

	* nsd/nsconf.c:
	* tests/test.nscfg:
	* tests/testserver/modules/http.tcl: Add helper command
	nstest_http for test suite and new config parameter
	ns/parameters/tcllibrary so that the tcl shared library can be set
	to an arbitrary path.

2005-04-17  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* tests/ns_nsv.test: added new file.
	Credits to Bernd (b.eidenschink@kinetiqa.de).

2005-04-17  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c: ns_conn status was wrongly returning the
	changed status code instead of the previous value.
	This was introduced (again) by the changes below.

2005-04-16  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/nsmain.c: removed extra colon in variable declaration
	which caused some older gcc compilers to break.

	* nsd/conn.c: added "ns_conn flush" as per RFE #1184271
	and untabified and reidented the file (eh, old nit-picker)

2005-04-11  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/info.c:
	* nsd/proc.c:
	* nsd/return.c:
	* nsd/server.c:
	* nsd/fastpath.c:
	* nsd/pathname.c: New concept: server root. Callback can be
	registered to create the server root, defaults to statically
	assigned 'serverroot' from config, or host-based if enabled.
	Many virtual hosting options added. (RFE #1159471)
	* nsd/conn.c: Add callback to generate current location. If none
	registered, uses host-header and falls back to driver's location.
	Add new Ns_ConnAppendLocation() as preferred method of access,
	depreciated Ns_ConnLocation().
	* nsd/tclcmds.c: Add vhost related Tcl commands: ns_serverpath
	ns_pagepath ns_hashpath ns_serverrootproc ns_locationproc.
	* ns_pagepath.test:
	* ns_conn_host.test:
	* ns_serverpath.test:
	* ns_hashpath.test:
	* tests/test.nscfg: Add tests for vhost related commands. More
	location tests needed...

	* nsd/proc.c: Add proc info for NsFastGet.  Cleanup source code
	formatting.

	* tests/ns_urlencode.test: Add missing tests for urlencode fix.

2005-04-09  Stephen Deasey  <sdeasey@users.sf.net>

	* tests/ns_parseargs.test: Re-enable test for corrupted literal
	table.

2005-04-09  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/dns.c: Fixed GetAddr() when dealing with gethostbyname_r
	  calls. In some/many cases we ended up in an infinite loop.

	* nsd/tclobjv.c: SetSpecFromAny does not invalidate string rep
	  of the passed object after converting it to the ns:spec
	  object type. This will definitely corrupt the interp literal
	  table and result in process exitus when the interp is being
	  destroyed.
	* nsd/tclobj.c: fixed broken ptr deref
	* nsd/nsmain.c: adjusted options parsing for Windows / unix

2005-04-08  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/nsd.h: Added non-gnu implementation of poll() for
	* nsd/unix.c: platforms not implementing it (Darwin)

2005-04-03  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd.nsmain.c: fixed make test, argumens nowe processed
	  until first non dash parameter.

2005-04-03  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/nsmain.c: changed command line parsing from getopt to
	  simple manual processing thus getopt is not needed anymore.
	* nsd/getopt.c: removed because no needed anymore

2005-04-02  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/nsd.h:
	* nsd/driver.c:
	* nsd/tclinit.c:
	* nsd/nsmain.c: Add -c command line option which causes the server
	to start in command mode, reading commands from stdin and
	executing them like a tclsh.

	* Makefile:
	* tests/test.nscfg:
	* tests/all.tcl: Add new Makefile targets test, runtest and gdb
	which start the server in command mode.  Modify the test runner
	and add a test server config file.

	* tests/http.test:
	* tests/ns_addrbyhost.test:
	* tests/ns_adp_compress.test:
	* tests/ns_hostbyaddr.test:
	* tests/ns_hrefs.test:
	* tests/ns_parseargs.test: Update tests to use tlctest syntax and
	features.

2005-04-02  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tclcmds.c: added synonyms for ns_uuencode/ns_uudecode procs
	  as ns_base64encode/ns_base64decode, because those functions actually
	  do base64 encoding
	* nsd/tclmisc.c:
	* nsd/uuencode.c: modified uuencode/decode to support
	  string buffers any size and be compatible with GNU uuencode,
	  i.e. wrapping lines to be 60 chars. (RFE #1175025)

2005-03-28  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/nsd.h:
	* nsd/info.c:
	* nsd/op.c:
	* nsd/urlspace.c: Added support for ns_info filters,
	  ns_info traces, ns_info requestprocs commands using new
 	  Tcl callback interface. New commands show information about
	  registered filters/procs same way as ns_info scheduled does.
	  (RFE #1161597)

2005-03-27  Vlad Seryakov  <seryakov@users.sf.net>

	* nsd/tlrequest.c: In Ns_RegisterFilterObj command 'when'
	  was not initialized with 0 and because this is Ored flags
	  registered filters had incorrect mask.

2005-03-26  Stephen Deasey  <sdeasey@users.sf.net>

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/proc.c:
	* nsd/tclrequest.c: Convert to new callback and parse proc APIs.
	Remove support for old connId parameter.

	* tcl/file.tcl:
	* tcl/util.tcl: Remove support for old connId parameter.

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/Makefile:
	* nsd/tclcallbacks.c: Add routines to support calling Tcl code
	from C for callback events. (RFE #1162223)

	* nsd/proc.c:
	* nsd/tclcmds.c:
	* nsd/tclsched.c: Update to use new callback and parse proc APIs.

	* include/ns.h:
	* nsd/Makefile:
	* nsd/tclcmds.c:
	* nsd/cookies.c: Add cookie API for C and Tcl.  (RFE #1145957)

	* include/ns.h:
	* nsd/nsd.h:
	* nsd/tclobjv.c:
	* nsd/tclcmds.c:
	* tests/ns_parseargs.test: Change the signature of Ns_ObjvProc()s
	to return either TCL_OK, TCL_ERROR or TCL_BREAK.  Fixes a bug
	where options were being double-counted as args.  Also simplified
	the Ns_ObjvProc interface by passing the Ns_ObjvSpec directly.

	Added a new Tcl command: ns_parseargs specification args.  It
	parses options, args and handles defaults.

	* nsd/tclobj.c: Added some wrapper procs for handling Tcl obj
	types.

	* nsd/tclinit.c: Added Ns_TclPrintfResult() as a convenience for
	writing ints into a formatted string result.

2005-03-23  Vlad Seryakov <vlad@crystalballinc.com>

         include/ns.h:  Make Ns_SockBindUdp public function, it is public in
         nsd/binder.c already.

2005-03-22  Vlad Seryakov <vlad@crystalballinc.com>

         nsd/driver.c:  Ensure that socket driver's DriverClose callback
         gets executed when the socket is released.  This was causing a
         memory leak for HTTPS connections with nsopenssl when a Keep-Alive
         HTTP request timed out. Closes SF Bug #1160850 from AOLServer.

2005-03-18  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c: Modified NsTclWriteContentObjCmd() to
	  consult reqPtr->avail instead of conn->contentLength
	  when examining how much bytes from the content is
	  still left to copy. The conn->contentLength is not
	  touched any more.

	* tcl/fastpath.tcl:
	* nsd/nsd.h:
	* nsd/return.c:
	* nsd/server.c: Removed handling of aolpress (RFE #1165562)

2005-03-17  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/conn.c: Added [ns_conn channel] (RFE #1156141)
	  Also, added [ns_conncptofp ?-bytes toCopy? channel]
	  (RFE #1156899). This change scraps parsing of the
	  dummy connId argument left for 2.x server compat.

	* nsd/nsd.h
	* nsd/unix.h
	* nsd/nsmain.h: Added watchdog implementation (RFE #1156875)

2005-03-12  Vlad Seryakov <vlad@crystalballinc.com>

        * nspd/
        * nsext/: moved modules out of the core into modules /section

2005-03-08  Vlad Seryakov <vlad@crystalballinc.com>

	* nslog/nslog.c: as Stephan pointed there is possibility for
	server to crash under some conditions accessing already freed
	extheaders pointer. So i put lock before putting extheaders values
        in the log, in most cases extheaders are empty so there is no overhead.

2005-03-07  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nslog/nslog.c: fixed bad handling of rollfmt arg which
	caused segmetantion if the alternative rollfmt was not
	defined.

2005-03-07  Vlad Seryakov <vlad@crystalballinc.com>

        * include/hs.h:
        * nsd/conn.c: changed return status for Ns_ConnSetResponseStatus
        to void, corrected comments for this function.

2005-03-06  Vlad Seryakov <vlad@crystalballinc.com>

	* nsd/tclmisc.c:
	* nsd/tclcmds.c: added ns_sha1 command.

2005-03-06  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/tclxkeylist.c:
	* nsd/tclcmds.c: added objectified version of TclX keyed lists.

2005-03-05  Vlad Seryakov <vlad@crystalballinc.com>

	* nsd/conn.c include/ns.h Add Ns_ConnSetResponseStatus command to
        be able to se response status without touching headers. Also
        ns_conn status has been extended with ability to set response
        status if third argument is provided. ns_conn status ?newStatus?

        * nslog/nslog.c: changed syntax to conform naviserver style,
        no functional modifications

2005-03-04  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclobjv.c: Add support for boolean options which take no
	argument. Truth is determined by presence of the option alone.

2005-03-01  Vlad Seryakov <vlad@crystalballinc.com>

	* nslog/nslog.c: redone options support for the module
        using flags, added commands to ns_accesslog to change flags and/or
        extended headers on the fly

2005-02-27  Stephen Deasey  <sdeasey@users.sf.net>

	* nsd/tclobjv.c: Short circuit option processing when "--" is found.
	Accurately describe optional arguments as optional in error messages.

	* include/ns.h:
	* nsd/form.c:
	* nsd/request.c:
	* nsd/urlencode: Decode + and other characters in URL paths
	correctly.  Fixes bug #1145277.

	* nsd/mimetypes.c: XML mime types changed to application/xml from
	text/xml, fixes bug #1145927.  Added a handful of new mime
	mappings.

2005-02-26  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/tclobjv.c: New file with objv argument parsing code

	* nsd/Makefile: Added compliation directive for nsd/tclobjv.c

	* include/ns.h: Added declarations...
 	 for following structs:
	    o. Ns_ObjvSpec
	    o. Ns_ObjvTable
	  and following calls:
	    o. Ns_ParseObjv
	    o. Ns_ObjvBool
	    o. Ns_ObjvInt
	    o. Ns_ObjvLong
	    o. Ns_ObjvWideInt
	    o. Ns_ObjvDouble
	    o. Ns_ObjvString
	    o. Ns_ObjvObj
	    o. Ns_ObjvIndex
	    o. Ns_ObjvFlags
	    o. Ns_ObjvBreak
	    o. Ns_ObjvArgs
	  This all implements new argument parsing code from Stephen.

2005-02-26  Zoran Vasiljevic  <vasiljevic@users.sf.net>

	* nsd/unix.c:
	* include/ns.h: added Ns_GetNameForUid(), Ns_GetNameForGid()

	* nsd/nsmain.c: allows server to be started as uid == 0
	  if both of the following are true:
	     o. the caller process is running as root (getuid() == 0)
	     o. "-u root" or "-u 0" was given on the command line
	  Also, improved and tightented verification of passed user
	  and/or group information.

2005-02-24  Vlad Seryakov <vlad@crystalballinc.com>

	* include/ns.h nsd/nsd.h nsd/binder.c: changed server name
	  from AOLserver to NaviServer in ns_info command.
	  New ListenXXX family functions declared in the ns.h file.

2005-02-22  Vlad Seryakov <vlad@crystalballinc.com>

	* nsd/tclsched.c nsd/tclcmds.c doc/at.n: added ns_atstartup
	  Tcl command to be run after server started and initialized.
	  Update documentation about those commands, kind of.

2005-02-17  Zoran Vasiljevic <vasiljevic@users.sf.net>

	* nsd/tclfile.c: fixed broken NsTclChanObjCmd command which
	  caused server crashes when trasporting channels between
	  threads when linked against Tcl 8.4+ library (Bug #1143586)

2005-02-16 Vlad Seryakov <vlad@crystalballinc.com>

	* Makefile configure configure.in sample-config.tcl
	  include/Makefile.build include/Makefile.global.in
	  include/Makefile.module.in include/ns.h include/nsdb.h
	  include/nsextmsg.h include/nspd.h include/nsthread.h
	  tcl/charsets.tcl tcl/compat.tcl tcl/debug.tcl tcl/fastpath.tcl
	  tcl/file.tcl tcl/form.tcl tcl/http.tcl tcl/init.tcl
	  tcl/nsdb.tcl tcl/util.tcl: modified license in the header

	* tcl/sendmail.tcl: added erro notification flag to smtp_recv proc,
	  when receiving last QUIT response, do not fire exception if
	  remote server just drops the connection on QUIT

	* nsd/binder.c: added UDP/UNIX/RAW protocols to the sockets,

	* nsd/init.c: call InitLog before dns resolver will try to resolve
	  local host, this prevents server crash

	* nsd/tclsock.c: back ported from CVS 4.1, added -localhost/-localport
	  to ns_scokopen

	* nsdb/dbdrv.c: if driver set exception in select, do to rewrite it
	  in the server

2005-02-15  Zoran Vasiljevic <vasiljevic@users.sf.net>

	--- INITIAL IMPORT OF 4.0.10 AOLSERVER CODE ---
