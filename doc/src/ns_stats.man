[manpage_begin ns_stats n 4.99]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Return command stats information}]

[description]

This command returns proc call stats for procs which match the glob pattern. 
Results are sorted based on option which can be one of the following:

-count: results are sorted by count in descending order (default)
-name: results are sorted by proc name in ascending order

[para]

In order to instruct NaviServer to keep these stats, you must define two
settings in your nsd.tcl, in section ns/server/${server_name}/tcl

[section {COMMANDS}]

[list_begin definitions]

[call [cmd ns_stats] [opt [arg pattern]]]

[list_end]

[example_begin]
 ns_section ns/server/${server_name}/tcl
 ns_param statlevel x
 ns_param statmaxbuf y
[example_end]

[para]

Stats will be collected if statlevel is greater than 0.  It gets passed to Tcl_CreateTrace() like so:

[example_begin]
 Tcl_CreateTrace(interp, nsconf.tcl.statlevel, StatsTrace, NULL);
[example_end]

[para]
If statsmaxbuf is less than or equal to zero, there will be no
stats buffer and the global table will be updated directly, according to the comment:

[example_begin]
   236     /*
   237      * If buffering is not enabled, update the global table directly
   238      * (this could be a source of lock contention).  Otherwise, update
   239      * this thread's table, flushing if the buffer limit is exceeded.
   240      */
[example_end]

Otherwise, statmaxbuf specifies the number of entries in the stats buffer hash table.
This is all documented from NaviServer 3.4.2, nsd/tclstats.c.

[section EXAMPLES]

Here is a sample ns_stats.adp to use to display the output of ns_stats:

[example_begin]
 ns_adp_puts [lb][lb]format "%-60s %s" command {times invoked}[rb][rb]
[example_end]

[manpage_end]

